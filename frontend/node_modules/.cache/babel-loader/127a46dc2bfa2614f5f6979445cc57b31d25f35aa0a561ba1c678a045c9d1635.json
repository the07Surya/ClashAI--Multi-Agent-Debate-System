{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SuryaPratapRout\\\\OneDrive - GyanSys Inc\\\\Desktop\\\\Apex\\\\Chimera-Debate\\\\Chimera-Clue\\\\frontend\\\\src\\\\components\\\\AgentPanel.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { motion, AnimatePresence } from 'framer-motion';\n// import { \n//   LightBulbIcon, \n//   ShieldExclamationIcon, \n//   CogIcon, \n//   ScaleIcon,\n//   ChevronDownIcon,\n//   ChevronUpIcon\n// } from '@heroicons/react/24/outline';\n\n// const getAgentConfig = (agentType) => {\n//   const configs = {\n//     innovator: {\n//       icon: LightBulbIcon,\n//       title: 'The Innovator',\n//       description: 'Champions progress & breakthrough solutions',\n//       colors: {\n//         primary: 'text-emerald-700',\n//         bg: 'bg-gradient-to-br from-emerald-50 to-green-50',\n//         border: 'border-emerald-200',\n//         accent: 'bg-emerald-100',\n//         glow: 'shadow-emerald-200/50'\n//       }\n//     },\n//     skeptic: {\n//       icon: ShieldExclamationIcon,\n//       title: 'The Skeptic',\n//       description: 'Challenges assumptions & identifies risks',\n//       colors: {\n//         primary: 'text-red-700',\n//         bg: 'bg-gradient-to-br from-red-50 to-pink-50',\n//         border: 'border-red-200',\n//         accent: 'bg-red-100',\n//         glow: 'shadow-red-200/50'\n//       }\n//     },\n//     engineer: {\n//       icon: CogIcon,\n//       title: 'The Engineer',\n//       description: 'Focuses on feasibility & implementation',\n//       colors: {\n//         primary: 'text-blue-700',\n//         bg: 'bg-gradient-to-br from-blue-50 to-cyan-50',\n//         border: 'border-blue-200',\n//         accent: 'bg-blue-100',\n//         glow: 'shadow-blue-200/50'\n//       }\n//     },\n//     ethicist: {\n//       icon: ScaleIcon,\n//       title: 'The Ethicist',\n//       description: 'Examines moral implications & social impact',\n//       colors: {\n//         primary: 'text-purple-700',\n//         bg: 'bg-gradient-to-br from-purple-50 to-indigo-50',\n//         border: 'border-purple-200',\n//         accent: 'bg-purple-100',\n//         glow: 'shadow-purple-200/50'\n//       }\n//     }\n//   };\n//   return configs[agentType] || configs.innovator;\n// };\n\n// const AgentPanel = ({ agent, messages = [], currentRound = 1, isActive = false, debateStatus = 'idle' }) => {\n//   const [expandedRounds, setExpandedRounds] = useState(new Set([currentRound])); // Auto-expand current round\n//   const config = getAgentConfig(agent);\n//   const Icon = config.icon;\n\n//   // Filter and group messages by round\n//   const agentMessages = messages\n//     .filter(msg => msg.data && msg.data.agent === agent)\n//     .sort((a, b) => (a.data.round || 0) - (b.data.round || 0));\n\n//   // Group messages by round\n//   const messagesByRound = agentMessages.reduce((acc, msg) => {\n//     const round = msg.data.round || 1;\n//     if (!acc[round]) acc[round] = [];\n//     acc[round].push(msg);\n//     return acc;\n//   }, {});\n\n//   const hasMessages = agentMessages.length > 0;\n//   const hasMessageForCurrentRound = messagesByRound[currentRound]?.length > 0;\n\n//   // Determine if we should show \"waiting\" state\n//   const shouldShowWaiting = () => {\n//     if (debateStatus === 'debating' && currentRound > 0) {\n//       return !hasMessageForCurrentRound && !isActive;\n//     }\n//     return false;\n//   };\n\n//   const toggleRoundExpansion = (round) => {\n//     const newExpanded = new Set(expandedRounds);\n//     if (newExpanded.has(round)) {\n//       newExpanded.delete(round);\n//     } else {\n//       newExpanded.add(round);\n//     }\n//     setExpandedRounds(newExpanded);\n//   };\n\n//   // Get all rounds that have messages or current active round\n//   const allRounds = [...new Set([\n//     ...Object.keys(messagesByRound).map(Number),\n//     ...(currentRound > 0 ? [currentRound] : [])\n//   ])].sort((a, b) => b - a); // Reverse order (latest first)\n\n//   return (\n//     <motion.div \n//       initial={{ opacity: 0, scale: 0.95 }}\n//       animate={{ opacity: 1, scale: 1 }}\n//       className={`\n//         ${config.colors.bg} \n//         ${config.colors.border} \n//         border-2 rounded-xl p-5 h-full min-h-[500px] max-h-[700px]\n//         ${isActive ? `${config.colors.glow} shadow-xl scale-[1.02]` : 'shadow-lg'}\n//         transition-all duration-300 relative overflow-hidden flex flex-col\n//       `}\n//     >\n//       {/* Status Indicator */}\n//       {isActive && (\n//         <div className=\"absolute top-2 right-2 z-10\">\n//           <div className={`${config.colors.accent} rounded-full px-2 py-1`}>\n//             <div className=\"flex items-center space-x-1\">\n//               <div className=\"w-2 h-2 bg-current rounded-full animate-pulse\"></div>\n//               <span className=\"text-xs font-medium\">Thinking...</span>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Header */}\n//       <div className=\"flex items-center space-x-3 mb-4 flex-shrink-0\">\n//         <div className={`${config.colors.accent} p-2 rounded-lg`}>\n//           <Icon className={`h-6 w-6 ${config.colors.primary}`} />\n//         </div>\n//         <div className=\"flex-1 min-w-0\">\n//           <h3 className={`font-bold text-lg ${config.colors.primary} truncate`}>\n//             {config.title}\n//           </h3>\n//           <p className=\"text-xs text-gray-600 leading-tight\">\n//             {config.description}\n//           </p>\n//         </div>\n//       </div>\n\n//       {/* Messages by Round */}\n//       <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 space-y-3\">\n//         <AnimatePresence>\n//           {!hasMessages && !shouldShowWaiting() ? (\n//             <motion.div \n//               initial={{ opacity: 0 }}\n//               animate={{ opacity: 1 }}\n//               className=\"text-center py-8\"\n//             >\n//               <div className=\"text-gray-400 mb-2\">\n//                 <Icon className=\"h-12 w-12 mx-auto opacity-30\" />\n//               </div>\n//               <p className=\"text-sm text-gray-500 italic\">\n//                 Ready for analysis...\n//               </p>\n//             </motion.div>\n//           ) : shouldShowWaiting() ? (\n//             <motion.div \n//               initial={{ opacity: 0 }}\n//               animate={{ opacity: 1 }}\n//               className=\"text-center py-8\"\n//             >\n//               <div className=\"text-gray-400 mb-2\">\n//                 <Icon className=\"h-12 w-12 mx-auto opacity-30 animate-pulse\" />\n//               </div>\n//               <p className=\"text-sm text-gray-500 italic\">\n//                 Analyzing for Round {currentRound}...\n//               </p>\n//             </motion.div>\n//           ) : (\n//             <>\n//               {allRounds.map(round => (\n//                 <RoundSection\n//                   key={round}\n//                   round={round}\n//                   messages={messagesByRound[round] || []}\n//                   isExpanded={expandedRounds.has(round)}\n//                   onToggleExpansion={toggleRoundExpansion}\n//                   config={config}\n//                   isCurrentRound={round === currentRound}\n//                   isWaitingForRound={round === currentRound && !messagesByRound[round] && debateStatus === 'debating'}\n//                 />\n//               ))}\n//             </>\n//           )}\n//         </AnimatePresence>\n//       </div>\n\n//       {/* Footer Stats */}\n//       <div className=\"mt-4 pt-3 border-t border-white/50 flex-shrink-0\">\n//         <div className=\"flex justify-between items-center text-xs\">\n//           <span className=\"text-gray-600\">\n//             {agentMessages.length} response{agentMessages.length !== 1 ? 's' : ''} â€¢ {allRounds.length} round{allRounds.length !== 1 ? 's' : ''}\n//           </span>\n//           <span className={`${config.colors.primary} font-medium`}>\n//             Current: Round {currentRound}\n//           </span>\n//         </div>\n//       </div>\n//     </motion.div>\n//   );\n// };\n\n// const RoundSection = ({ round, messages, isExpanded, onToggleExpansion, config, isCurrentRound, isWaitingForRound }) => {\n//   const hasMessages = messages && messages.length > 0;\n\n//   return (\n//     <div className=\"border border-white/30 rounded-lg overflow-hidden\">\n//       {/* Round Header */}\n//       <button\n//         onClick={() => onToggleExpansion(round)}\n//         className={`w-full px-3 py-2 flex items-center justify-between transition-all duration-200 ${\n//           isCurrentRound \n//             ? `${config.colors.accent} ${config.colors.primary} font-semibold` \n//             : 'bg-white/50 text-gray-700 hover:bg-white/70'\n//         }`}\n//       >\n//         <div className=\"flex items-center space-x-2\">\n//           <span className=\"text-sm font-medium\">Round {round}</span>\n//           {isCurrentRound && (\n//             <span className=\"text-xs bg-white/80 px-2 py-0.5 rounded-full\">\n//               Current\n//             </span>\n//           )}\n//           {isWaitingForRound && (\n//             <span className=\"text-xs text-orange-600 animate-pulse\">\n//               Analyzing...\n//             </span>\n//           )}\n//         </div>\n\n//         <div className=\"flex items-center space-x-2\">\n//           {hasMessages && (\n//             <span className=\"text-xs opacity-70\">\n//               {messages.length} response{messages.length !== 1 ? 's' : ''}\n//             </span>\n//           )}\n//           {isExpanded ? (\n//             <ChevronUpIcon className=\"h-4 w-4\" />\n//           ) : (\n//             <ChevronDownIcon className=\"h-4 w-4\" />\n//           )}\n//         </div>\n//       </button>\n\n//       {/* Round Content */}\n//       <AnimatePresence>\n//         {isExpanded && (\n//           <motion.div\n//             initial={{ height: 0, opacity: 0 }}\n//             animate={{ height: 'auto', opacity: 1 }}\n//             exit={{ height: 0, opacity: 0 }}\n//             transition={{ duration: 0.2 }}\n//             className=\"overflow-hidden\"\n//           >\n//             <div className=\"p-3 space-y-3 bg-white/20\">\n//               {isWaitingForRound ? (\n//                 <div className=\"text-center py-4\">\n//                   <div className=\"w-6 h-6 border-2 border-current border-t-transparent rounded-full animate-spin mx-auto mb-2 opacity-50\"></div>\n//                   <p className=\"text-xs text-gray-600 italic\">Waiting for analysis...</p>\n//                 </div>\n//               ) : !hasMessages ? (\n//                 <div className=\"text-center py-4\">\n//                   <p className=\"text-xs text-gray-500 italic\">No response for this round</p>\n//                 </div>\n//               ) : (\n//                 messages.map((message, index) => (\n//                   <motion.div\n//                     key={message.id || `${round}-${index}`}\n//                     initial={{ opacity: 0, y: 10 }}\n//                     animate={{ opacity: 1, y: 0 }}\n//                     transition={{ delay: index * 0.05 }}\n//                     className=\"bg-white/60 backdrop-blur-sm rounded-lg p-3 border border-white/50\"\n//                   >\n//                     <div className=\"flex justify-between items-center mb-2\">\n//                       <span className=\"text-xs text-gray-500\">\n//                         {new Date(message.data.timestamp).toLocaleTimeString([], {\n//                           hour: '2-digit', \n//                           minute: '2-digit'\n//                         })}\n//                       </span>\n//                       {message.data.round && (\n//                         <span className=\"text-xs font-medium text-gray-600 bg-white/50 px-2 py-0.5 rounded-full\">\n//                           R{message.data.round}\n//                         </span>\n//                       )}\n//                     </div>\n//                     <p className=\"text-sm text-gray-800 leading-relaxed\">\n//                       {message.data.content}\n//                     </p>\n//                   </motion.div>\n//                 ))\n//               )}\n//             </div>\n//           </motion.div>\n//         )}\n//       </AnimatePresence>\n//     </div>\n//   );\n// };\n\n// export default AgentPanel;\n\nimport React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { LightBulbIcon, ShieldExclamationIcon, CogIcon, ScaleIcon, ChevronDownIcon, ChevronUpIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getAgentConfig = agentType => {\n  const configs = {\n    innovator: {\n      icon: LightBulbIcon,\n      title: 'The Innovator',\n      description: 'Champions progress & breakthrough solutions',\n      colors: {\n        primary: 'text-emerald-700',\n        bg: 'bg-gradient-to-br from-emerald-50 to-green-50',\n        border: 'border-emerald-200',\n        accent: 'bg-emerald-100',\n        glow: 'shadow-emerald-200/50'\n      }\n    },\n    skeptic: {\n      icon: ShieldExclamationIcon,\n      title: 'The Skeptic',\n      description: 'Challenges assumptions & identifies risks',\n      colors: {\n        primary: 'text-red-700',\n        bg: 'bg-gradient-to-br from-red-50 to-pink-50',\n        border: 'border-red-200',\n        accent: 'bg-red-100',\n        glow: 'shadow-red-200/50'\n      }\n    },\n    engineer: {\n      icon: CogIcon,\n      title: 'The Engineer',\n      description: 'Focuses on feasibility & implementation',\n      colors: {\n        primary: 'text-blue-700',\n        bg: 'bg-gradient-to-br from-blue-50 to-cyan-50',\n        border: 'border-blue-200',\n        accent: 'bg-blue-100',\n        glow: 'shadow-blue-200/50'\n      }\n    },\n    ethicist: {\n      icon: ScaleIcon,\n      title: 'The Ethicist',\n      description: 'Examines moral implications & social impact',\n      colors: {\n        primary: 'text-purple-700',\n        bg: 'bg-gradient-to-br from-purple-50 to-indigo-50',\n        border: 'border-purple-200',\n        accent: 'bg-purple-100',\n        glow: 'shadow-purple-200/50'\n      }\n    }\n  };\n  return configs[agentType] || configs.innovator;\n};\nconst AgentPanel = ({\n  agent,\n  messages = [],\n  currentRound = 1,\n  isActive = false,\n  debateStatus = 'idle'\n}) => {\n  _s();\n  var _messagesByRound$curr;\n  const [expandedRounds, setExpandedRounds] = useState(new Set());\n  const config = getAgentConfig(agent);\n  const Icon = config.icon;\n\n  // Auto-expand the current round when new messages arrive for it\n  useEffect(() => {\n    setExpandedRounds(prev => new Set(prev).add(currentRound));\n  }, [currentRound, messages]);\n\n  // Filter and group messages by round\n  const agentMessages = messages\n  // <-- FIX: Changed msg.data.agent to msg.data.role to match backend data structure\n  .filter(msg => msg.data && msg.data.role === agent).sort((a, b) => (a.data.round || 0) - (b.data.round || 0));\n\n  // Group messages by round\n  const messagesByRound = agentMessages.reduce((acc, msg) => {\n    const round = msg.data.round || 1;\n    if (!acc[round]) acc[round] = [];\n    acc[round].push(msg);\n    return acc;\n  }, {});\n  const hasMessages = agentMessages.length > 0;\n  const hasMessageForCurrentRound = ((_messagesByRound$curr = messagesByRound[currentRound]) === null || _messagesByRound$curr === void 0 ? void 0 : _messagesByRound$curr.length) > 0;\n\n  // Determine if we should show \"waiting\" state\n  const shouldShowWaiting = () => {\n    if (debateStatus === 'debating' && currentRound > 0) {\n      return !hasMessageForCurrentRound && !isActive;\n    }\n    return false;\n  };\n  const toggleRoundExpansion = round => {\n    const newExpanded = new Set(expandedRounds);\n    if (newExpanded.has(round)) {\n      newExpanded.delete(round);\n    } else {\n      newExpanded.add(round);\n    }\n    setExpandedRounds(newExpanded);\n  };\n\n  // Get all rounds that have messages\n  const allRounds = [...new Set(Object.keys(messagesByRound).map(Number))].sort((a, b) => b - a); // Reverse order (latest first)\n\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0,\n      scale: 0.95\n    },\n    animate: {\n      opacity: 1,\n      scale: 1\n    },\n    className: `\n        ${config.colors.bg} \n        ${config.colors.border} \n        border-2 rounded-xl p-5 h-full min-h-[500px] max-h-[700px]\n        ${isActive ? `${config.colors.glow} shadow-xl scale-[1.02]` : 'shadow-lg'}\n        transition-all duration-300 relative overflow-hidden flex flex-col\n      `,\n    children: [isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-2 right-2 z-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${config.colors.accent} rounded-full px-2 py-1`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-2 h-2 bg-current rounded-full animate-pulse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs font-medium\",\n            children: \"Thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-3 mb-4 flex-shrink-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${config.colors.accent} p-2 rounded-lg`,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          className: `h-6 w-6 ${config.colors.primary}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 min-w-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `font-bold text-lg ${config.colors.primary} truncate`,\n          children: config.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-600 leading-tight\",\n          children: config.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 space-y-3\",\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: !hasMessages && debateStatus !== 'debating' ? /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          className: \"text-center py-8 flex flex-col items-center justify-center h-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-400 mb-2\",\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: \"h-12 w-12 mx-auto opacity-30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 italic\",\n            children: \"Awaiting debate start...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [allRounds.map(round => /*#__PURE__*/_jsxDEV(RoundSection, {\n            round: round,\n            messages: messagesByRound[round] || [],\n            isExpanded: expandedRounds.has(round),\n            onToggleExpansion: toggleRoundExpansion,\n            config: config,\n            isCurrentRound: round === currentRound\n          }, round, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 17\n          }, this)), shouldShowWaiting() && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0\n            },\n            animate: {\n              opacity: 1\n            },\n            className: \"text-center py-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-400 mb-2\",\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                className: \"h-12 w-12 mx-auto opacity-30 animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 italic\",\n              children: [\"Analyzing for Round \", currentRound, \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 pt-3 border-t border-white/50 flex-shrink-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center text-xs\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-600\",\n          children: [agentMessages.length, \" response\", agentMessages.length !== 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${config.colors.primary} font-medium`,\n          children: [\"Current: Round \", currentRound]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this);\n};\n_s(AgentPanel, \"52QYBYlXGlgCwMwo7MyHnSTu2X0=\");\n_c = AgentPanel;\nconst RoundSection = ({\n  round,\n  messages,\n  isExpanded,\n  onToggleExpansion,\n  config,\n  isCurrentRound\n}) => {\n  const hasMessages = messages && messages.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border border-white/30 rounded-lg overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onToggleExpansion(round),\n      className: `w-full px-3 py-2 flex items-center justify-between transition-all duration-200 ${isCurrentRound ? `${config.colors.accent} ${config.colors.primary} font-semibold` : 'bg-white/50 text-gray-700 hover:bg-white/70'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium\",\n          children: [\"Round \", round]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this), isCurrentRound && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs bg-white/80 px-2 py-0.5 rounded-full\",\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [hasMessages && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs opacity-70\",\n          children: [messages.length, \" response\", messages.length !== 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this), isExpanded ? /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n          className: \"h-4 w-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n          className: \"h-4 w-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isExpanded && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          height: 0,\n          opacity: 0\n        },\n        animate: {\n          height: 'auto',\n          opacity: 1\n        },\n        exit: {\n          height: 0,\n          opacity: 0\n        },\n        transition: {\n          duration: 0.2\n        },\n        className: \"overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 space-y-3 bg-white/20\",\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            transition: {\n              delay: index * 0.05\n            },\n            className: \"bg-white/60 backdrop-blur-sm rounded-lg p-3 border border-white/50\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500\",\n                children: new Date(message.data.timestamp).toLocaleTimeString([], {\n                  hour: '2-digit',\n                  minute: '2-digit'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-800 leading-relaxed\",\n              children: message.data.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 21\n            }, this)]\n          }, message.id || `${round}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 534,\n    columnNumber: 5\n  }, this);\n};\n_c2 = RoundSection;\nexport default AgentPanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"AgentPanel\");\n$RefreshReg$(_c2, \"RoundSection\");","map":{"version":3,"names":["React","useState","useEffect","motion","AnimatePresence","LightBulbIcon","ShieldExclamationIcon","CogIcon","ScaleIcon","ChevronDownIcon","ChevronUpIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","getAgentConfig","agentType","configs","innovator","icon","title","description","colors","primary","bg","border","accent","glow","skeptic","engineer","ethicist","AgentPanel","agent","messages","currentRound","isActive","debateStatus","_s","_messagesByRound$curr","expandedRounds","setExpandedRounds","Set","config","Icon","prev","add","agentMessages","filter","msg","data","role","sort","a","b","round","messagesByRound","reduce","acc","push","hasMessages","length","hasMessageForCurrentRound","shouldShowWaiting","toggleRoundExpansion","newExpanded","has","delete","allRounds","Object","keys","map","Number","div","initial","opacity","scale","animate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","RoundSection","isExpanded","onToggleExpansion","isCurrentRound","_c","onClick","height","exit","transition","duration","message","index","y","delay","Date","timestamp","toLocaleTimeString","hour","minute","content","id","_c2","$RefreshReg$"],"sources":["C:/Users/SuryaPratapRout/OneDrive - GyanSys Inc/Desktop/Apex/Chimera-Debate/Chimera-Clue/frontend/src/components/AgentPanel.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { motion, AnimatePresence } from 'framer-motion';\r\n// import { \r\n//   LightBulbIcon, \r\n//   ShieldExclamationIcon, \r\n//   CogIcon, \r\n//   ScaleIcon,\r\n//   ChevronDownIcon,\r\n//   ChevronUpIcon\r\n// } from '@heroicons/react/24/outline';\r\n\r\n// const getAgentConfig = (agentType) => {\r\n//   const configs = {\r\n//     innovator: {\r\n//       icon: LightBulbIcon,\r\n//       title: 'The Innovator',\r\n//       description: 'Champions progress & breakthrough solutions',\r\n//       colors: {\r\n//         primary: 'text-emerald-700',\r\n//         bg: 'bg-gradient-to-br from-emerald-50 to-green-50',\r\n//         border: 'border-emerald-200',\r\n//         accent: 'bg-emerald-100',\r\n//         glow: 'shadow-emerald-200/50'\r\n//       }\r\n//     },\r\n//     skeptic: {\r\n//       icon: ShieldExclamationIcon,\r\n//       title: 'The Skeptic',\r\n//       description: 'Challenges assumptions & identifies risks',\r\n//       colors: {\r\n//         primary: 'text-red-700',\r\n//         bg: 'bg-gradient-to-br from-red-50 to-pink-50',\r\n//         border: 'border-red-200',\r\n//         accent: 'bg-red-100',\r\n//         glow: 'shadow-red-200/50'\r\n//       }\r\n//     },\r\n//     engineer: {\r\n//       icon: CogIcon,\r\n//       title: 'The Engineer',\r\n//       description: 'Focuses on feasibility & implementation',\r\n//       colors: {\r\n//         primary: 'text-blue-700',\r\n//         bg: 'bg-gradient-to-br from-blue-50 to-cyan-50',\r\n//         border: 'border-blue-200',\r\n//         accent: 'bg-blue-100',\r\n//         glow: 'shadow-blue-200/50'\r\n//       }\r\n//     },\r\n//     ethicist: {\r\n//       icon: ScaleIcon,\r\n//       title: 'The Ethicist',\r\n//       description: 'Examines moral implications & social impact',\r\n//       colors: {\r\n//         primary: 'text-purple-700',\r\n//         bg: 'bg-gradient-to-br from-purple-50 to-indigo-50',\r\n//         border: 'border-purple-200',\r\n//         accent: 'bg-purple-100',\r\n//         glow: 'shadow-purple-200/50'\r\n//       }\r\n//     }\r\n//   };\r\n//   return configs[agentType] || configs.innovator;\r\n// };\r\n\r\n// const AgentPanel = ({ agent, messages = [], currentRound = 1, isActive = false, debateStatus = 'idle' }) => {\r\n//   const [expandedRounds, setExpandedRounds] = useState(new Set([currentRound])); // Auto-expand current round\r\n//   const config = getAgentConfig(agent);\r\n//   const Icon = config.icon;\r\n  \r\n//   // Filter and group messages by round\r\n//   const agentMessages = messages\r\n//     .filter(msg => msg.data && msg.data.agent === agent)\r\n//     .sort((a, b) => (a.data.round || 0) - (b.data.round || 0));\r\n\r\n//   // Group messages by round\r\n//   const messagesByRound = agentMessages.reduce((acc, msg) => {\r\n//     const round = msg.data.round || 1;\r\n//     if (!acc[round]) acc[round] = [];\r\n//     acc[round].push(msg);\r\n//     return acc;\r\n//   }, {});\r\n\r\n//   const hasMessages = agentMessages.length > 0;\r\n//   const hasMessageForCurrentRound = messagesByRound[currentRound]?.length > 0;\r\n  \r\n//   // Determine if we should show \"waiting\" state\r\n//   const shouldShowWaiting = () => {\r\n//     if (debateStatus === 'debating' && currentRound > 0) {\r\n//       return !hasMessageForCurrentRound && !isActive;\r\n//     }\r\n//     return false;\r\n//   };\r\n\r\n//   const toggleRoundExpansion = (round) => {\r\n//     const newExpanded = new Set(expandedRounds);\r\n//     if (newExpanded.has(round)) {\r\n//       newExpanded.delete(round);\r\n//     } else {\r\n//       newExpanded.add(round);\r\n//     }\r\n//     setExpandedRounds(newExpanded);\r\n//   };\r\n\r\n//   // Get all rounds that have messages or current active round\r\n//   const allRounds = [...new Set([\r\n//     ...Object.keys(messagesByRound).map(Number),\r\n//     ...(currentRound > 0 ? [currentRound] : [])\r\n//   ])].sort((a, b) => b - a); // Reverse order (latest first)\r\n\r\n//   return (\r\n//     <motion.div \r\n//       initial={{ opacity: 0, scale: 0.95 }}\r\n//       animate={{ opacity: 1, scale: 1 }}\r\n//       className={`\r\n//         ${config.colors.bg} \r\n//         ${config.colors.border} \r\n//         border-2 rounded-xl p-5 h-full min-h-[500px] max-h-[700px]\r\n//         ${isActive ? `${config.colors.glow} shadow-xl scale-[1.02]` : 'shadow-lg'}\r\n//         transition-all duration-300 relative overflow-hidden flex flex-col\r\n//       `}\r\n//     >\r\n//       {/* Status Indicator */}\r\n//       {isActive && (\r\n//         <div className=\"absolute top-2 right-2 z-10\">\r\n//           <div className={`${config.colors.accent} rounded-full px-2 py-1`}>\r\n//             <div className=\"flex items-center space-x-1\">\r\n//               <div className=\"w-2 h-2 bg-current rounded-full animate-pulse\"></div>\r\n//               <span className=\"text-xs font-medium\">Thinking...</span>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Header */}\r\n//       <div className=\"flex items-center space-x-3 mb-4 flex-shrink-0\">\r\n//         <div className={`${config.colors.accent} p-2 rounded-lg`}>\r\n//           <Icon className={`h-6 w-6 ${config.colors.primary}`} />\r\n//         </div>\r\n//         <div className=\"flex-1 min-w-0\">\r\n//           <h3 className={`font-bold text-lg ${config.colors.primary} truncate`}>\r\n//             {config.title}\r\n//           </h3>\r\n//           <p className=\"text-xs text-gray-600 leading-tight\">\r\n//             {config.description}\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n      \r\n//       {/* Messages by Round */}\r\n//       <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 space-y-3\">\r\n//         <AnimatePresence>\r\n//           {!hasMessages && !shouldShowWaiting() ? (\r\n//             <motion.div \r\n//               initial={{ opacity: 0 }}\r\n//               animate={{ opacity: 1 }}\r\n//               className=\"text-center py-8\"\r\n//             >\r\n//               <div className=\"text-gray-400 mb-2\">\r\n//                 <Icon className=\"h-12 w-12 mx-auto opacity-30\" />\r\n//               </div>\r\n//               <p className=\"text-sm text-gray-500 italic\">\r\n//                 Ready for analysis...\r\n//               </p>\r\n//             </motion.div>\r\n//           ) : shouldShowWaiting() ? (\r\n//             <motion.div \r\n//               initial={{ opacity: 0 }}\r\n//               animate={{ opacity: 1 }}\r\n//               className=\"text-center py-8\"\r\n//             >\r\n//               <div className=\"text-gray-400 mb-2\">\r\n//                 <Icon className=\"h-12 w-12 mx-auto opacity-30 animate-pulse\" />\r\n//               </div>\r\n//               <p className=\"text-sm text-gray-500 italic\">\r\n//                 Analyzing for Round {currentRound}...\r\n//               </p>\r\n//             </motion.div>\r\n//           ) : (\r\n//             <>\r\n//               {allRounds.map(round => (\r\n//                 <RoundSection\r\n//                   key={round}\r\n//                   round={round}\r\n//                   messages={messagesByRound[round] || []}\r\n//                   isExpanded={expandedRounds.has(round)}\r\n//                   onToggleExpansion={toggleRoundExpansion}\r\n//                   config={config}\r\n//                   isCurrentRound={round === currentRound}\r\n//                   isWaitingForRound={round === currentRound && !messagesByRound[round] && debateStatus === 'debating'}\r\n//                 />\r\n//               ))}\r\n//             </>\r\n//           )}\r\n//         </AnimatePresence>\r\n//       </div>\r\n\r\n//       {/* Footer Stats */}\r\n//       <div className=\"mt-4 pt-3 border-t border-white/50 flex-shrink-0\">\r\n//         <div className=\"flex justify-between items-center text-xs\">\r\n//           <span className=\"text-gray-600\">\r\n//             {agentMessages.length} response{agentMessages.length !== 1 ? 's' : ''} â€¢ {allRounds.length} round{allRounds.length !== 1 ? 's' : ''}\r\n//           </span>\r\n//           <span className={`${config.colors.primary} font-medium`}>\r\n//             Current: Round {currentRound}\r\n//           </span>\r\n//         </div>\r\n//       </div>\r\n//     </motion.div>\r\n//   );\r\n// };\r\n\r\n// const RoundSection = ({ round, messages, isExpanded, onToggleExpansion, config, isCurrentRound, isWaitingForRound }) => {\r\n//   const hasMessages = messages && messages.length > 0;\r\n  \r\n//   return (\r\n//     <div className=\"border border-white/30 rounded-lg overflow-hidden\">\r\n//       {/* Round Header */}\r\n//       <button\r\n//         onClick={() => onToggleExpansion(round)}\r\n//         className={`w-full px-3 py-2 flex items-center justify-between transition-all duration-200 ${\r\n//           isCurrentRound \r\n//             ? `${config.colors.accent} ${config.colors.primary} font-semibold` \r\n//             : 'bg-white/50 text-gray-700 hover:bg-white/70'\r\n//         }`}\r\n//       >\r\n//         <div className=\"flex items-center space-x-2\">\r\n//           <span className=\"text-sm font-medium\">Round {round}</span>\r\n//           {isCurrentRound && (\r\n//             <span className=\"text-xs bg-white/80 px-2 py-0.5 rounded-full\">\r\n//               Current\r\n//             </span>\r\n//           )}\r\n//           {isWaitingForRound && (\r\n//             <span className=\"text-xs text-orange-600 animate-pulse\">\r\n//               Analyzing...\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n        \r\n//         <div className=\"flex items-center space-x-2\">\r\n//           {hasMessages && (\r\n//             <span className=\"text-xs opacity-70\">\r\n//               {messages.length} response{messages.length !== 1 ? 's' : ''}\r\n//             </span>\r\n//           )}\r\n//           {isExpanded ? (\r\n//             <ChevronUpIcon className=\"h-4 w-4\" />\r\n//           ) : (\r\n//             <ChevronDownIcon className=\"h-4 w-4\" />\r\n//           )}\r\n//         </div>\r\n//       </button>\r\n\r\n//       {/* Round Content */}\r\n//       <AnimatePresence>\r\n//         {isExpanded && (\r\n//           <motion.div\r\n//             initial={{ height: 0, opacity: 0 }}\r\n//             animate={{ height: 'auto', opacity: 1 }}\r\n//             exit={{ height: 0, opacity: 0 }}\r\n//             transition={{ duration: 0.2 }}\r\n//             className=\"overflow-hidden\"\r\n//           >\r\n//             <div className=\"p-3 space-y-3 bg-white/20\">\r\n//               {isWaitingForRound ? (\r\n//                 <div className=\"text-center py-4\">\r\n//                   <div className=\"w-6 h-6 border-2 border-current border-t-transparent rounded-full animate-spin mx-auto mb-2 opacity-50\"></div>\r\n//                   <p className=\"text-xs text-gray-600 italic\">Waiting for analysis...</p>\r\n//                 </div>\r\n//               ) : !hasMessages ? (\r\n//                 <div className=\"text-center py-4\">\r\n//                   <p className=\"text-xs text-gray-500 italic\">No response for this round</p>\r\n//                 </div>\r\n//               ) : (\r\n//                 messages.map((message, index) => (\r\n//                   <motion.div\r\n//                     key={message.id || `${round}-${index}`}\r\n//                     initial={{ opacity: 0, y: 10 }}\r\n//                     animate={{ opacity: 1, y: 0 }}\r\n//                     transition={{ delay: index * 0.05 }}\r\n//                     className=\"bg-white/60 backdrop-blur-sm rounded-lg p-3 border border-white/50\"\r\n//                   >\r\n//                     <div className=\"flex justify-between items-center mb-2\">\r\n//                       <span className=\"text-xs text-gray-500\">\r\n//                         {new Date(message.data.timestamp).toLocaleTimeString([], {\r\n//                           hour: '2-digit', \r\n//                           minute: '2-digit'\r\n//                         })}\r\n//                       </span>\r\n//                       {message.data.round && (\r\n//                         <span className=\"text-xs font-medium text-gray-600 bg-white/50 px-2 py-0.5 rounded-full\">\r\n//                           R{message.data.round}\r\n//                         </span>\r\n//                       )}\r\n//                     </div>\r\n//                     <p className=\"text-sm text-gray-800 leading-relaxed\">\r\n//                       {message.data.content}\r\n//                     </p>\r\n//                   </motion.div>\r\n//                 ))\r\n//               )}\r\n//             </div>\r\n//           </motion.div>\r\n//         )}\r\n//       </AnimatePresence>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AgentPanel;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { \r\n  LightBulbIcon, \r\n  ShieldExclamationIcon, \r\n  CogIcon, \r\n  ScaleIcon,\r\n  ChevronDownIcon,\r\n  ChevronUpIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nconst getAgentConfig = (agentType) => {\r\n  const configs = {\r\n    innovator: {\r\n      icon: LightBulbIcon,\r\n      title: 'The Innovator',\r\n      description: 'Champions progress & breakthrough solutions',\r\n      colors: {\r\n        primary: 'text-emerald-700',\r\n        bg: 'bg-gradient-to-br from-emerald-50 to-green-50',\r\n        border: 'border-emerald-200',\r\n        accent: 'bg-emerald-100',\r\n        glow: 'shadow-emerald-200/50'\r\n      }\r\n    },\r\n    skeptic: {\r\n      icon: ShieldExclamationIcon,\r\n      title: 'The Skeptic',\r\n      description: 'Challenges assumptions & identifies risks',\r\n      colors: {\r\n        primary: 'text-red-700',\r\n        bg: 'bg-gradient-to-br from-red-50 to-pink-50',\r\n        border: 'border-red-200',\r\n        accent: 'bg-red-100',\r\n        glow: 'shadow-red-200/50'\r\n      }\r\n    },\r\n    engineer: {\r\n      icon: CogIcon,\r\n      title: 'The Engineer',\r\n      description: 'Focuses on feasibility & implementation',\r\n      colors: {\r\n        primary: 'text-blue-700',\r\n        bg: 'bg-gradient-to-br from-blue-50 to-cyan-50',\r\n        border: 'border-blue-200',\r\n        accent: 'bg-blue-100',\r\n        glow: 'shadow-blue-200/50'\r\n      }\r\n    },\r\n    ethicist: {\r\n      icon: ScaleIcon,\r\n      title: 'The Ethicist',\r\n      description: 'Examines moral implications & social impact',\r\n      colors: {\r\n        primary: 'text-purple-700',\r\n        bg: 'bg-gradient-to-br from-purple-50 to-indigo-50',\r\n        border: 'border-purple-200',\r\n        accent: 'bg-purple-100',\r\n        glow: 'shadow-purple-200/50'\r\n      }\r\n    }\r\n  };\r\n  return configs[agentType] || configs.innovator;\r\n};\r\n\r\nconst AgentPanel = ({ agent, messages = [], currentRound = 1, isActive = false, debateStatus = 'idle' }) => {\r\n  const [expandedRounds, setExpandedRounds] = useState(new Set());\r\n  const config = getAgentConfig(agent);\r\n  const Icon = config.icon;\r\n\r\n  // Auto-expand the current round when new messages arrive for it\r\n  useEffect(() => {\r\n    setExpandedRounds(prev => new Set(prev).add(currentRound));\r\n  }, [currentRound, messages]);\r\n  \r\n  // Filter and group messages by round\r\n  const agentMessages = messages\r\n    // <-- FIX: Changed msg.data.agent to msg.data.role to match backend data structure\r\n    .filter(msg => msg.data && msg.data.role === agent)\r\n    .sort((a, b) => (a.data.round || 0) - (b.data.round || 0));\r\n\r\n  // Group messages by round\r\n  const messagesByRound = agentMessages.reduce((acc, msg) => {\r\n    const round = msg.data.round || 1;\r\n    if (!acc[round]) acc[round] = [];\r\n    acc[round].push(msg);\r\n    return acc;\r\n  }, {});\r\n\r\n  const hasMessages = agentMessages.length > 0;\r\n  const hasMessageForCurrentRound = messagesByRound[currentRound]?.length > 0;\r\n  \r\n  // Determine if we should show \"waiting\" state\r\n  const shouldShowWaiting = () => {\r\n    if (debateStatus === 'debating' && currentRound > 0) {\r\n      return !hasMessageForCurrentRound && !isActive;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const toggleRoundExpansion = (round) => {\r\n    const newExpanded = new Set(expandedRounds);\r\n    if (newExpanded.has(round)) {\r\n      newExpanded.delete(round);\r\n    } else {\r\n      newExpanded.add(round);\r\n    }\r\n    setExpandedRounds(newExpanded);\r\n  };\r\n\r\n  // Get all rounds that have messages\r\n  const allRounds = [...new Set(Object.keys(messagesByRound).map(Number))]\r\n    .sort((a, b) => b - a); // Reverse order (latest first)\r\n\r\n  return (\r\n    <motion.div \r\n      initial={{ opacity: 0, scale: 0.95 }}\r\n      animate={{ opacity: 1, scale: 1 }}\r\n      className={`\r\n        ${config.colors.bg} \r\n        ${config.colors.border} \r\n        border-2 rounded-xl p-5 h-full min-h-[500px] max-h-[700px]\r\n        ${isActive ? `${config.colors.glow} shadow-xl scale-[1.02]` : 'shadow-lg'}\r\n        transition-all duration-300 relative overflow-hidden flex flex-col\r\n      `}\r\n    >\r\n      {/* Status Indicator */}\r\n      {isActive && (\r\n        <div className=\"absolute top-2 right-2 z-10\">\r\n          <div className={`${config.colors.accent} rounded-full px-2 py-1`}>\r\n            <div className=\"flex items-center space-x-1\">\r\n              <div className=\"w-2 h-2 bg-current rounded-full animate-pulse\"></div>\r\n              <span className=\"text-xs font-medium\">Thinking...</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Header */}\r\n      <div className=\"flex items-center space-x-3 mb-4 flex-shrink-0\">\r\n        <div className={`${config.colors.accent} p-2 rounded-lg`}>\r\n          <Icon className={`h-6 w-6 ${config.colors.primary}`} />\r\n        </div>\r\n        <div className=\"flex-1 min-w-0\">\r\n          <h3 className={`font-bold text-lg ${config.colors.primary} truncate`}>\r\n            {config.title}\r\n          </h3>\r\n          <p className=\"text-xs text-gray-600 leading-tight\">\r\n            {config.description}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Messages by Round */}\r\n      <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 space-y-3\">\r\n        <AnimatePresence>\r\n          {!hasMessages && debateStatus !== 'debating' ? (\r\n            <motion.div \r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              className=\"text-center py-8 flex flex-col items-center justify-center h-full\"\r\n            >\r\n              <div className=\"text-gray-400 mb-2\">\r\n                <Icon className=\"h-12 w-12 mx-auto opacity-30\" />\r\n              </div>\r\n              <p className=\"text-sm text-gray-500 italic\">\r\n                Awaiting debate start...\r\n              </p>\r\n            </motion.div>\r\n          ) : (\r\n            <>\r\n              {allRounds.map(round => (\r\n                <RoundSection\r\n                  key={round}\r\n                  round={round}\r\n                  messages={messagesByRound[round] || []}\r\n                  isExpanded={expandedRounds.has(round)}\r\n                  onToggleExpansion={toggleRoundExpansion}\r\n                  config={config}\r\n                  isCurrentRound={round === currentRound}\r\n                />\r\n              ))}\r\n              {shouldShowWaiting() && (\r\n                 <motion.div \r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    className=\"text-center py-8\"\r\n                  >\r\n                    <div className=\"text-gray-400 mb-2\">\r\n                      <Icon className=\"h-12 w-12 mx-auto opacity-30 animate-pulse\" />\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-500 italic\">\r\n                      Analyzing for Round {currentRound}...\r\n                    </p>\r\n                  </motion.div>\r\n              )}\r\n            </>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n\r\n      {/* Footer Stats */}\r\n      <div className=\"mt-4 pt-3 border-t border-white/50 flex-shrink-0\">\r\n        <div className=\"flex justify-between items-center text-xs\">\r\n          <span className=\"text-gray-600\">\r\n            {agentMessages.length} response{agentMessages.length !== 1 ? 's' : ''}\r\n          </span>\r\n          <span className={`${config.colors.primary} font-medium`}>\r\n            Current: Round {currentRound}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst RoundSection = ({ round, messages, isExpanded, onToggleExpansion, config, isCurrentRound }) => {\r\n  const hasMessages = messages && messages.length > 0;\r\n  \r\n  return (\r\n    <div className=\"border border-white/30 rounded-lg overflow-hidden\">\r\n      {/* Round Header */}\r\n      <button\r\n        onClick={() => onToggleExpansion(round)}\r\n        className={`w-full px-3 py-2 flex items-center justify-between transition-all duration-200 ${\r\n          isCurrentRound \r\n            ? `${config.colors.accent} ${config.colors.primary} font-semibold` \r\n            : 'bg-white/50 text-gray-700 hover:bg-white/70'\r\n        }`}\r\n      >\r\n        <div className=\"flex items-center space-x-2\">\r\n          <span className=\"text-sm font-medium\">Round {round}</span>\r\n          {isCurrentRound && (\r\n            <span className=\"text-xs bg-white/80 px-2 py-0.5 rounded-full\">\r\n              Current\r\n            </span>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-2\">\r\n          {hasMessages && (\r\n            <span className=\"text-xs opacity-70\">\r\n              {messages.length} response{messages.length !== 1 ? 's' : ''}\r\n            </span>\r\n          )}\r\n          {isExpanded ? (\r\n            <ChevronUpIcon className=\"h-4 w-4\" />\r\n          ) : (\r\n            <ChevronDownIcon className=\"h-4 w-4\" />\r\n          )}\r\n        </div>\r\n      </button>\r\n\r\n      {/* Round Content */}\r\n      <AnimatePresence>\r\n        {isExpanded && (\r\n          <motion.div\r\n            initial={{ height: 0, opacity: 0 }}\r\n            animate={{ height: 'auto', opacity: 1 }}\r\n            exit={{ height: 0, opacity: 0 }}\r\n            transition={{ duration: 0.2 }}\r\n            className=\"overflow-hidden\"\r\n          >\r\n            <div className=\"p-3 space-y-3 bg-white/20\">\r\n              {messages.map((message, index) => (\r\n                  <motion.div\r\n                    key={message.id || `${round}-${index}`}\r\n                    initial={{ opacity: 0, y: 10 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ delay: index * 0.05 }}\r\n                    className=\"bg-white/60 backdrop-blur-sm rounded-lg p-3 border border-white/50\"\r\n                  >\r\n                    <div className=\"flex justify-between items-center mb-2\">\r\n                      <span className=\"text-xs text-gray-500\">\r\n                        {new Date(message.data.timestamp).toLocaleTimeString([], {\r\n                          hour: '2-digit', \r\n                          minute: '2-digit'\r\n                        })}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-800 leading-relaxed\">\r\n                      {message.data.content}\r\n                    </p>\r\n                  </motion.div>\r\n                ))}\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgentPanel;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}