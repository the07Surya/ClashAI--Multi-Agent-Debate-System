{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SuryaPratapRout\\\\OneDrive - GyanSys Inc\\\\Desktop\\\\Apex\\\\Chimera-Debate\\\\Chimera-Clue\\\\frontend\\\\src\\\\components\\\\DebateInterface.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import { motion, AnimatePresence } from 'framer-motion';\n// import { \n//   ArrowPathIcon, \n//   PlayIcon,\n//   PauseIcon \n// } from '@heroicons/react/24/outline';\n\n// import useWebSocket from '../hooks/useWebSocket';\n// import ResearchPanel from './ResearchPanel';\n// import AgentPanel from './AgentPanel';\n// import JudgePanel from './JudgePanel';\n// import FinalReport from './FinalReport';\n\n// const DebateInterface = () => {\n//   const [query, setQuery] = useState('');\n//   const [sessionId] = useState(() => `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\n//   const [debateState, setDebateState] = useState({\n//     status: 'idle',\n//     researchBrief: null,\n//     agentMessages: [],\n//     judgeDecisions: [],\n//     finalReport: null,\n//     currentRound: 0,\n//     startTime: null\n//   });\n\n//   const messagesEndRef = useRef(null);\n//   const { isConnected, messages, sendMessage, clearMessages, connectionStatus } = useWebSocket(\n//     `ws://localhost:8000/debate/${sessionId}`\n//   );\n\n//   // --- FIX: This ref tracks how many messages we've already processed ---\n//   const processedMessagesCount = useRef(0);\n\n//   // Auto-scroll to bottom on new messages\n//   const scrollToBottom = () => {\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//   };\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [debateState.agentMessages, debateState.finalReport]);\n\n//   // --- FIX: Rewritten message processing logic to handle batches ---\n//   useEffect(() => {\n//     // Get only the new messages that haven't been processed yet\n//     const newMessages = messages.slice(processedMessagesCount.current);\n//     if (newMessages.length === 0) return;\n\n//     // Process all new messages in a batch\n//     setDebateState(prev => {\n//       // Create a mutable copy of the previous state\n//       const newState = { ...prev };\n\n//       newMessages.forEach(message => {\n//         switch (message.type) {\n//           case 'research_complete':\n//             newState.status = 'research_complete';\n//             newState.researchBrief = message.data.brief;\n//             break;\n\n//           case 'agent_response':\n//             newState.status = 'debating';\n//             // Avoid adding duplicate messages\n//             if (!newState.agentMessages.some(m => m.id === message.id)) {\n//               newState.agentMessages.push(message);\n//             }\n//             newState.currentRound = Math.max(newState.currentRound, message.data.round || 1);\n//             break;\n\n//           case 'judge_decision':\n//             newState.status = 'judge_deciding';\n//             if (!newState.judgeDecisions.some(d => d.id === message.id)) {\n//                 newState.judgeDecisions.push(message);\n//             }\n//             break;\n\n//           case 'final_report':\n//             newState.status = 'complete';\n//             newState.finalReport = message.data;\n//             break;\n\n//           case 'debate_complete':\n//             newState.status = 'complete';\n//             break;\n\n//           case 'error':\n//             console.error('Debate error:', message.message);\n//             newState.status = 'error';\n//             break;\n\n//           default:\n//             console.log('Received unknown message type:', message.type);\n//             break;\n//         }\n//       });\n\n//       return newState;\n//     });\n\n//     // Update the counter to the new total number of messages\n//     processedMessagesCount.current = messages.length;\n\n//   }, [messages]); // This effect now correctly depends only on the 'messages' array\n\n//   const startDebate = () => {\n//     if (!query.trim() || !isConnected) return;\n\n//     clearMessages();\n//     processedMessagesCount.current = 0; // Reset the counter\n//     setDebateState({\n//       status: 'starting',\n//       researchBrief: null,\n//       agentMessages: [],\n//       judgeDecisions: [],\n//       finalReport: null,\n//       currentRound: 0,\n//       startTime: new Date()\n//     });\n\n//     const success = sendMessage({\n//       type: 'start_debate',\n//       query: query\n//     });\n\n//     if (success) {\n//       setDebateState(prev => ({ ...prev, status: 'researching' }));\n//     }\n//   };\n\n//   const resetDebate = () => {\n//     setQuery('');\n//     clearMessages();\n//     processedMessagesCount.current = 0; // Reset the counter\n//     setDebateState({\n//       status: 'idle',\n//       researchBrief: null,\n//       agentMessages: [],\n//       judgeDecisions: [],\n//       finalReport: null,\n//       currentRound: 0,\n//       startTime: null\n//     });\n//   };\n\n//   const getStatusConfig = () => {\n//     const configs = {\n//       idle: { \n//         message: 'Ready to explore complex topics through expert debate', \n//         color: 'text-gray-600',\n//         bgColor: 'bg-gray-100',\n//         icon: '🤔'\n//       },\n//       starting: { \n//         message: 'Initializing expert debate session...', \n//         color: 'text-blue-600',\n//         bgColor: 'bg-blue-100',\n//         icon: '🚀'\n//       },\n//       researching: { \n//         message: 'AI researcher gathering comprehensive information...', \n//         color: 'text-blue-600',\n//         bgColor: 'bg-blue-100',\n//         icon: '🔍'\n//       },\n//       research_complete: { \n//         message: 'Research complete. Expert agents preparing arguments...', \n//         color: 'text-green-600',\n//         bgColor: 'bg-green-100',\n//         icon: '✅'\n//       },\n//       debating: { \n//         message: `Round ${debateState.currentRound} - Expert debate in progress...`, \n//         color: 'text-purple-600',\n//         bgColor: 'bg-purple-100',\n//         icon: '🎯'\n//       },\n//       debating_round_1_parallel: { \n//         message: 'Round 1 - All experts presenting opening statements simultaneously...', \n//         color: 'text-purple-600',\n//         bgColor: 'bg-purple-100',\n//         icon: '🎯'\n//       },\n//       judge_deciding: { \n//         message: 'AI judge evaluating debate progress...', \n//         color: 'text-yellow-600',\n//         bgColor: 'bg-yellow-100',\n//         icon: '⚖️'\n//       },\n//       moderating: { \n//         message: 'AI moderator synthesizing insights and conclusions...', \n//         color: 'text-indigo-600',\n//         bgColor: 'bg-indigo-100',\n//         icon: '📝'\n//       },\n//       complete: { \n//         message: 'Multi-agent debate analysis complete!', \n//         color: 'text-green-600',\n//         bgColor: 'bg-green-100',\n//         icon: '🎉'\n//       },\n//       error: { \n//         message: 'An error occurred during the debate process', \n//         color: 'text-red-600',\n//         bgColor: 'bg-red-100',\n//         icon: '❌'\n//       }\n//     };\n\n//     // Handle dynamic sequential round statuses\n//     if (debateState.status.startsWith('debating_round_') && debateState.status.includes('_sequential')) {\n//       return {\n//         message: `Round ${debateState.currentRound} - Expert rebuttals and counter-arguments...`,\n//         color: 'text-indigo-600',\n//         bgColor: 'bg-indigo-100',\n//         icon: '💬'\n//       };\n//     }\n\n//     return configs[debateState.status] || configs.idle;\n//   };\n\n//   const isDebateActive = ['starting', 'researching', 'research_complete', 'debating', 'judge_deciding', 'moderating'].includes(debateState.status);\n//   const statusConfig = getStatusConfig();\n\n//   const getConnectionStatusConfig = () => {\n//     const configs = {\n//       connected: { color: 'bg-green-500', text: 'Connected', textColor: 'text-green-800' },\n//       connecting: { color: 'bg-yellow-500', text: 'Connecting...', textColor: 'text-yellow-800' },\n//       reconnecting: { color: 'bg-yellow-500', text: 'Reconnecting...', textColor: 'text-yellow-800' },\n//       disconnected: { color: 'bg-red-500', text: 'Disconnected', textColor: 'text-red-800' },\n//       error: { color: 'bg-red-500', text: 'Connection Error', textColor: 'text-red-800' },\n//       failed: { color: 'bg-red-500', text: 'Connection Failed', textColor: 'text-red-800' }\n//     };\n//     return configs[connectionStatus] || configs.disconnected;\n//   };\n\n//   const connectionConfig = getConnectionStatusConfig();\n\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-100\">\n//       <div className=\"max-w-7xl mx-auto p-4 space-y-6\">\n\n//         {/* Header */}\n//         <motion.div \n//           initial={{ opacity: 0, y: -20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           className=\"text-center py-8\"\n//         >\n//           <h1 className=\"text-5xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent mb-3\">\n//             Project Chimera\n//           </h1>\n//           <p className=\"text-xl text-gray-600 font-medium\">\n//             Multi-Agent Expert Debate System\n//           </p>\n//           <p className=\"text-sm text-gray-500 mt-2\">\n//             Harness the power of AI experts to explore complex topics from multiple perspectives\n//           </p>\n//         </motion.div>\n\n//         {/* Query Input Section */}\n//         <motion.div \n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl p-6 border border-white/50\"\n//         >\n//           <div className=\"flex flex-col space-y-4\">\n//             <div className=\"flex space-x-4\">\n//               <div className=\"flex-1 relative\">\n//                 <input\n//                   type=\"text\"\n//                   value={query}\n//                   onChange={(e) => setQuery(e.target.value)}\n//                   placeholder=\"Enter your complex question or debate topic...\"\n//                   className=\"w-full p-4 pl-12 border-2 border-gray-200 rounded-xl focus:ring-4 focus:ring-blue-500/20 focus:border-blue-500 transition-all duration-200 text-lg\"\n//                   disabled={isDebateActive}\n//                   onKeyPress={(e) => e.key === 'Enter' && !isDebateActive && startDebate()}\n//                 />\n//                 <div className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400\">\n//                   🤖\n//                 </div>\n//               </div>\n\n//               <button\n//                 onClick={startDebate}\n//                 disabled={!query.trim() || !isConnected || isDebateActive}\n//                 className=\"px-8 py-4 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-xl hover:from-blue-700 hover:to-indigo-700 disabled:from-gray-400 disabled:to-gray-500 disabled:cursor-not-allowed transition-all duration-200 flex items-center space-x-2 font-semibold text-lg shadow-lg hover:shadow-xl\"\n//               >\n//                 {isDebateActive ? (\n//                   <>\n//                     <PauseIcon className=\"h-5 w-5 animate-pulse\" />\n//                     <span>In Progress</span>\n//                   </>\n//                 ) : (\n//                   <>\n//                     <PlayIcon className=\"h-5 w-5\" />\n//                     <span>Start Debate</span>\n//                   </>\n//                 )}\n//               </button>\n\n//               <button\n//                 onClick={resetDebate}\n//                 disabled={isDebateActive}\n//                 className=\"px-6 py-4 bg-gray-600 text-white rounded-xl hover:bg-gray-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-all duration-200 flex items-center space-x-2 font-semibold shadow-lg\"\n//               >\n//                 <ArrowPathIcon className=\"h-5 w-5\" />\n//                 <span>Reset</span>\n//               </button>\n//             </div>\n//           </div>\n//         </motion.div>\n\n//         {/* Status Bar */}\n//         <motion.div \n//           initial={{ opacity: 0 }}\n//           animate={{ opacity: 1 }}\n//           className=\"flex items-center justify-between\"\n//         >\n//           <div className={`inline-flex items-center px-4 py-2 rounded-full text-sm font-bold ${statusConfig.bgColor} ${statusConfig.color}`}>\n//             <span className=\"mr-2\">{statusConfig.icon}</span>\n//             {statusConfig.message}\n//           </div>\n\n//           <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-white/80 ${connectionConfig.textColor} border border-gray-200`}>\n//             <div className={`w-2 h-2 rounded-full mr-2 ${connectionConfig.color} ${\n//               connectionStatus === 'connecting' || connectionStatus === 'reconnecting' ? 'animate-pulse' : ''\n//             }`}></div>\n//             {connectionConfig.text}\n//           </div>\n//         </motion.div>\n\n//         {/* Research Phase */}\n//         <AnimatePresence>\n//           {(debateState.status === 'researching' || debateState.researchBrief) && (\n//             <ResearchPanel \n//               researchBrief={debateState.researchBrief} \n//               isLoading={debateState.status === 'researching'}\n//             />\n//           )}\n//         </AnimatePresence>\n\n//         {/* Judge Decisions */}\n//         <AnimatePresence>\n//           {debateState.judgeDecisions.length > 0 && (\n//             <JudgePanel judgeDecisions={debateState.judgeDecisions} />\n//           )}\n//         </AnimatePresence>\n\n//         {/* Expert Agents Grid */}\n//         <AnimatePresence>\n//           {(debateState.agentMessages.length > 0 || isDebateActive) && (\n//             <motion.div \n//               initial={{ opacity: 0, y: 20 }}\n//               animate={{ opacity: 1, y: 0 }}\n//               className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\"\n//             >\n//               {['innovator', 'skeptic', 'engineer', 'ethicist'].map((agent) => (\n//                 <AgentPanel\n//                   key={agent}\n//                   agent={agent}\n//                   messages={debateState.agentMessages}\n//                   currentRound={debateState.currentRound}\n//                   isActive={false} // Active state can be enhanced later\n//                   debateStatus={debateState.status}\n//                 />\n//               ))}\n//             </motion.div>\n//           )}\n//         </AnimatePresence>\n\n//         {/* Final Report */}\n//         <AnimatePresence>\n//           {debateState.finalReport && (\n//             <FinalReport report={debateState.finalReport} />\n//           )}\n//         </AnimatePresence>\n\n//         {/* Scroll marker */}\n//         <div ref={messagesEndRef} />\n\n//         {/* Development Debug Panel */}\n//         {process.env.NODE_ENV === 'development' && (\n//           <motion.div \n//             initial={{ opacity: 0 }}\n//             animate={{ opacity: 1 }}\n//             className=\"bg-gray-900 text-green-400 p-4 rounded-lg font-mono text-xs space-y-1\"\n//           >\n//             <div className=\"text-green-300 font-bold mb-2\">🔧 Debug Panel</div>\n//             <div>Session: {sessionId}</div>\n//             <div>Status: {debateState.status}</div>\n//             <div>WS Msgs: {messages.length}</div>\n//             <div>Processed Msgs: {processedMessagesCount.current}</div>\n//             <div>Round: {debateState.currentRound}</div>\n//             <div>Connection: {connectionStatus}</div>\n//             <div>Agent Msgs in State: {debateState.agentMessages.length}</div>\n//             {debateState.startTime && (\n//               <div>Duration: {Math.round((new Date() - debateState.startTime) / 1000)}s</div>\n//             )}\n//           </motion.div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DebateInterface;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ArrowPathIcon, PlayIcon, PauseIcon, SparklesIcon, BoltIcon, RocketLaunchIcon } from '@heroicons/react/24/outline';\nimport useWebSocket from '../hooks/useWebSocket';\nimport ResearchPanel from './ResearchPanel';\nimport AgentPanel from './AgentPanel';\nimport JudgePanel from './JudgePanel';\nimport FinalReport from './FinalReport';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DebateInterface = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [sessionId] = useState(() => `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\n  const [debateState, setDebateState] = useState({\n    status: 'idle',\n    researchBrief: null,\n    agentMessages: [],\n    judgeDecisions: [],\n    finalReport: null,\n    currentRound: 0,\n    startTime: null\n  });\n  const messagesEndRef = useRef(null);\n  const {\n    isConnected,\n    messages,\n    sendMessage,\n    clearMessages,\n    connectionStatus\n  } = useWebSocket(`ws://localhost:8000/debate/${sessionId}`);\n  const processedMessagesCount = useRef(0);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [debateState.agentMessages, debateState.finalReport]);\n\n  // Correct, robust message processing logic\n  useEffect(() => {\n    const newMessages = messages.slice(processedMessagesCount.current);\n    if (newMessages.length === 0) return;\n    setDebateState(prev => {\n      const newState = {\n        ...prev\n      };\n      newMessages.forEach(message => {\n        switch (message.type) {\n          case 'research_complete':\n            newState.status = 'research_complete';\n            newState.researchBrief = message.data.brief;\n            break;\n          case 'agent_response':\n            newState.status = 'debating';\n            if (!newState.agentMessages.some(m => m.id === message.id)) {\n              newState.agentMessages.push(message);\n            }\n            newState.currentRound = Math.max(newState.currentRound, message.data.round || 1);\n            break;\n          case 'judge_decision':\n            newState.status = 'judge_deciding';\n            if (!newState.judgeDecisions.some(d => d.id === message.id)) {\n              newState.judgeDecisions.push(message);\n            }\n            break;\n          case 'final_report':\n            newState.status = 'complete';\n            newState.finalReport = message.data;\n            break;\n          case 'debate_complete':\n            newState.status = 'complete';\n            break;\n          case 'error':\n            console.error('Debate error:', message.message);\n            newState.status = 'error';\n            break;\n          default:\n            break;\n        }\n      });\n      return newState;\n    });\n    processedMessagesCount.current = messages.length;\n  }, [messages]);\n  const startDebate = () => {\n    if (!query.trim() || !isConnected) return;\n    clearMessages();\n    processedMessagesCount.current = 0;\n    setDebateState({\n      status: 'starting',\n      researchBrief: null,\n      agentMessages: [],\n      judgeDecisions: [],\n      finalReport: null,\n      currentRound: 0,\n      startTime: new Date()\n    });\n    const success = sendMessage({\n      type: 'start_debate',\n      query: query\n    });\n    if (success) {\n      setDebateState(prev => ({\n        ...prev,\n        status: 'researching'\n      }));\n    }\n  };\n  const resetDebate = () => {\n    setQuery('');\n    clearMessages();\n    processedMessagesCount.current = 0;\n    setDebateState({\n      status: 'idle',\n      researchBrief: null,\n      agentMessages: [],\n      judgeDecisions: [],\n      finalReport: null,\n      currentRound: 0,\n      startTime: null\n    });\n  };\n  const getStatusConfig = () => {\n    const configs = {\n      idle: {\n        message: 'Ready to unleash the power of AI debate',\n        color: 'text-slate-300',\n        bgColor: 'bg-slate-800/50',\n        borderColor: 'border-slate-600/50',\n        icon: '🧠',\n        glow: 'shadow-slate-500/10'\n      },\n      starting: {\n        message: 'Initializing neural debate matrix...',\n        color: 'text-cyan-300',\n        bgColor: 'bg-cyan-900/40',\n        borderColor: 'border-cyan-500/30',\n        icon: '⚡',\n        glow: 'shadow-cyan-500/30'\n      },\n      researching: {\n        message: 'AI researcher scanning global knowledge...',\n        color: 'text-blue-300',\n        bgColor: 'bg-blue-900/40',\n        borderColor: 'border-blue-500/30',\n        icon: '🔍',\n        glow: 'shadow-blue-500/30'\n      },\n      research_complete: {\n        message: 'Knowledge acquired. Experts awakening...',\n        color: 'text-emerald-300',\n        bgColor: 'bg-emerald-900/40',\n        borderColor: 'border-emerald-500/30',\n        icon: '✨',\n        glow: 'shadow-emerald-500/30'\n      },\n      debating: {\n        message: `Round ${debateState.currentRound} • Neural combat engaged`,\n        color: 'text-purple-300',\n        bgColor: 'bg-purple-900/40',\n        borderColor: 'border-purple-500/30',\n        icon: '🎯',\n        glow: 'shadow-purple-500/30'\n      },\n      judge_deciding: {\n        message: 'Supreme Judge evaluating neural patterns...',\n        color: 'text-amber-300',\n        bgColor: 'bg-amber-900/40',\n        borderColor: 'border-amber-500/30',\n        icon: '⚖️',\n        glow: 'shadow-amber-500/30'\n      },\n      moderating: {\n        message: 'Synthesizing collective intelligence...',\n        color: 'text-indigo-300',\n        bgColor: 'bg-indigo-900/40',\n        borderColor: 'border-indigo-500/30',\n        icon: '🧬',\n        glow: 'shadow-indigo-500/30'\n      },\n      complete: {\n        message: 'Debate matrix complete • Insights extracted',\n        color: 'text-emerald-300',\n        bgColor: 'bg-emerald-900/40',\n        borderColor: 'border-emerald-500/30',\n        icon: '🎉',\n        glow: 'shadow-emerald-500/30'\n      },\n      error: {\n        message: 'Neural network disruption detected',\n        color: 'text-red-300',\n        bgColor: 'bg-red-900/40',\n        borderColor: 'border-red-500/30',\n        icon: '⚠️',\n        glow: 'shadow-red-500/30'\n      }\n    };\n    return configs[debateState.status] || configs.idle;\n  };\n  const isDebateActive = ['starting', 'researching', 'research_complete', 'debating', 'judge_deciding', 'moderating'].includes(debateState.status);\n  const statusConfig = getStatusConfig();\n  const getConnectionStatusConfig = () => {\n    const configs = {\n      connected: {\n        color: 'bg-emerald-500',\n        text: 'Neural Link Active',\n        textColor: 'text-emerald-300',\n        bgColor: 'bg-emerald-900/40',\n        borderColor: 'border-emerald-500/30'\n      },\n      connecting: {\n        color: 'bg-amber-500',\n        text: 'Establishing Link...',\n        textColor: 'text-amber-300',\n        bgColor: 'bg-amber-900/40',\n        borderColor: 'border-amber-500/30'\n      },\n      reconnecting: {\n        color: 'bg-amber-500',\n        text: 'Reconnecting...',\n        textColor: 'text-amber-300',\n        bgColor: 'bg-amber-900/40',\n        borderColor: 'border-amber-500/30'\n      },\n      disconnected: {\n        color: 'bg-red-500',\n        text: 'Neural Link Offline',\n        textColor: 'text-red-300',\n        bgColor: 'bg-red-900/40',\n        borderColor: 'border-red-500/30'\n      },\n      error: {\n        color: 'bg-red-500',\n        text: 'Connection Error',\n        textColor: 'text-red-300',\n        bgColor: 'bg-red-900/40',\n        borderColor: 'border-red-500/30'\n      },\n      failed: {\n        color: 'bg-red-500',\n        text: 'Link Failed',\n        textColor: 'text-red-300',\n        bgColor: 'bg-red-900/40',\n        borderColor: 'border-red-500/30'\n      }\n    };\n    return configs[connectionStatus] || configs.disconnected;\n  };\n  const connectionConfig = getConnectionStatusConfig();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-slate-900 text-slate-200 relative overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-grid-slate-700/10 [mask-image:linear-gradient(to_bottom,white_20%,transparent_75%)]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 pointer-events-none [mask-image:radial-gradient(50%_50%_at_50%_50%,black_40%,transparent_100%)]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 bg-gradient-to-br from-purple-500/20 via-transparent to-cyan-500/20 opacity-50 animate-blob\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative z-10 max-w-7xl mx-auto p-6 space-y-8\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: -30\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.8,\n          ease: \"easeOut\"\n        },\n        className: \"text-center py-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-7xl md:text-8xl font-black bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent mb-4 tracking-tight\",\n          children: \"Chimera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-2xl md:text-3xl text-slate-300 font-bold tracking-wide\",\n          children: \"Neural Multi-Agent Debate System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 30\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          delay: 0.3,\n          duration: 0.8\n        },\n        className: \"relative\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-slate-800/50 backdrop-blur-xl rounded-3xl shadow-2xl border border-slate-700/50 p-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col lg:flex-row gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 relative group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: query,\n                onChange: e => setQuery(e.target.value),\n                placeholder: \"Enter your complex question or debate topic...\",\n                className: \"w-full p-6 pl-16 bg-slate-900/50 border-2 border-slate-600/50 rounded-2xl focus:ring-4 focus:ring-purple-500/30 focus:border-purple-500/50 transition-all duration-300 text-white placeholder-slate-400 text-lg font-medium group-hover:border-slate-500/70\",\n                disabled: isDebateActive,\n                onKeyPress: e => e.key === 'Enter' && !isDebateActive && startDebate()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"absolute left-6 top-1/2 transform -translate-y-1/2 text-slate-400 group-hover:text-cyan-400 transition-colors duration-300 text-2xl\",\n                children: \"\\uD83E\\uDDE0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(motion.button, {\n                whileHover: {\n                  scale: 1.02,\n                  boxShadow: \"0 10px 30px -10px rgba(139, 92, 246, 0.4)\"\n                },\n                whileTap: {\n                  scale: 0.98\n                },\n                onClick: startDebate,\n                disabled: !query.trim() || !isConnected || isDebateActive,\n                className: \"px-8 py-6 bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-2xl hover:from-purple-700 hover:to-pink-700 disabled:from-slate-600 disabled:to-slate-700 disabled:cursor-not-allowed transition-all duration-300 flex items-center space-x-3 font-bold text-lg shadow-xl border border-purple-500/50\",\n                children: isDebateActive ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(PauseIcon, {\n                    className: \"h-6 w-6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"In Progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 732,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(PlayIcon, {\n                    className: \"h-6 w-6\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 736,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Ignite Debate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n                whileHover: {\n                  scale: 1.02\n                },\n                whileTap: {\n                  scale: 0.98\n                },\n                onClick: resetDebate,\n                disabled: isDebateActive,\n                className: \"px-6 py-6 bg-slate-700 text-slate-300 rounded-2xl hover:bg-slate-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300 flex items-center space-x-3 font-semibold shadow-xl border border-slate-600/50\",\n                children: /*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n                  className: \"h-6 w-6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          delay: 0.6,\n          duration: 0.6\n        },\n        className: \"flex flex-col sm:flex-row items-center justify-between gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `inline-flex items-center px-6 py-3 rounded-2xl font-bold text-sm border-2 backdrop-blur-sm ${statusConfig.bgColor} ${statusConfig.color} ${statusConfig.borderColor} ${statusConfig.glow} shadow-xl`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-3 text-lg\",\n            children: statusConfig.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this), statusConfig.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `inline-flex items-center px-4 py-2 rounded-xl text-sm font-bold border-2 backdrop-blur-sm ${connectionConfig.bgColor} ${connectionConfig.textColor} ${connectionConfig.borderColor} shadow-lg`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-3 h-3 rounded-full mr-3 ${connectionConfig.color} ${connectionStatus === 'connecting' || connectionStatus === 'reconnecting' ? 'animate-pulse' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this), connectionConfig.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: (debateState.status === 'researching' || debateState.researchBrief) && /*#__PURE__*/_jsxDEV(ResearchPanel, {\n          researchBrief: debateState.researchBrief,\n          isLoading: debateState.status === 'researching'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: debateState.judgeDecisions.length > 0 && /*#__PURE__*/_jsxDEV(JudgePanel, {\n          judgeDecisions: debateState.judgeDecisions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: (isDebateActive || debateState.agentMessages.length > 0) && /*#__PURE__*/_jsxDEV(motion.div, {\n          initial: {\n            opacity: 0,\n            y: 30\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            delay: 0.2,\n            duration: 0.8,\n            staggerChildren: 0.1\n          },\n          className: \"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\",\n          children: ['innovator', 'skeptic', 'engineer', 'ethicist'].map(agent => /*#__PURE__*/_jsxDEV(AgentPanel, {\n            agent: agent,\n            messages: debateState.agentMessages,\n            currentRound: debateState.currentRound,\n            isActive: false,\n            debateStatus: debateState.status\n          }, agent, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: debateState.finalReport && /*#__PURE__*/_jsxDEV(FinalReport, {\n          report: debateState.finalReport\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        className: \"bg-slate-900/80 backdrop-blur-xl text-cyan-400 p-6 rounded-2xl font-mono text-xs space-y-2 border border-slate-700/50 shadow-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-cyan-300 font-bold mb-3\",\n          children: \"DEBUG CONSOLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Session: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-purple-400\",\n            children: sessionId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-400\",\n            children: debateState.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"WS Msgs: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-yellow-400\",\n            children: messages.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Processed: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-yellow-400\",\n            children: processedMessagesCount.current\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Round: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-pink-400\",\n            children: debateState.currentRound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Connection: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-400\",\n            children: connectionStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 830,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Agent Msgs: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-indigo-400\",\n            children: debateState.agentMessages.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 13\n        }, this), debateState.startTime && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Duration: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-emerald-400\",\n            children: [Math.round((new Date() - debateState.startTime) / 1000), \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 676,\n    columnNumber: 5\n  }, this);\n};\n_s(DebateInterface, \"/r0MJ7MdKPPt9JZ6SnnPGGfP9bc=\", false, function () {\n  return [useWebSocket];\n});\n_c = DebateInterface;\nexport default DebateInterface;\nvar _c;\n$RefreshReg$(_c, \"DebateInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","AnimatePresence","ArrowPathIcon","PlayIcon","PauseIcon","SparklesIcon","BoltIcon","RocketLaunchIcon","useWebSocket","ResearchPanel","AgentPanel","JudgePanel","FinalReport","jsxDEV","_jsxDEV","Fragment","_Fragment","DebateInterface","_s","query","setQuery","sessionId","Date","now","Math","random","toString","substr","debateState","setDebateState","status","researchBrief","agentMessages","judgeDecisions","finalReport","currentRound","startTime","messagesEndRef","isConnected","messages","sendMessage","clearMessages","connectionStatus","processedMessagesCount","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","newMessages","slice","length","prev","newState","forEach","message","type","data","brief","some","m","id","push","max","round","d","console","error","startDebate","trim","success","resetDebate","getStatusConfig","configs","idle","color","bgColor","borderColor","icon","glow","starting","researching","research_complete","debating","judge_deciding","moderating","complete","isDebateActive","includes","statusConfig","getConnectionStatusConfig","connected","text","textColor","connecting","reconnecting","disconnected","failed","connectionConfig","className","children","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","y","animate","transition","duration","ease","delay","value","onChange","e","target","placeholder","disabled","onKeyPress","key","button","whileHover","scale","boxShadow","whileTap","onClick","isLoading","staggerChildren","map","agent","isActive","debateStatus","report","ref","process","env","NODE_ENV","_c","$RefreshReg$"],"sources":["C:/Users/SuryaPratapRout/OneDrive - GyanSys Inc/Desktop/Apex/Chimera-Debate/Chimera-Clue/frontend/src/components/DebateInterface.jsx"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\r\n// import { motion, AnimatePresence } from 'framer-motion';\r\n// import { \r\n//   ArrowPathIcon, \r\n//   PlayIcon,\r\n//   PauseIcon \r\n// } from '@heroicons/react/24/outline';\r\n\r\n// import useWebSocket from '../hooks/useWebSocket';\r\n// import ResearchPanel from './ResearchPanel';\r\n// import AgentPanel from './AgentPanel';\r\n// import JudgePanel from './JudgePanel';\r\n// import FinalReport from './FinalReport';\r\n\r\n// const DebateInterface = () => {\r\n//   const [query, setQuery] = useState('');\r\n//   const [sessionId] = useState(() => `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\r\n//   const [debateState, setDebateState] = useState({\r\n//     status: 'idle',\r\n//     researchBrief: null,\r\n//     agentMessages: [],\r\n//     judgeDecisions: [],\r\n//     finalReport: null,\r\n//     currentRound: 0,\r\n//     startTime: null\r\n//   });\r\n\r\n//   const messagesEndRef = useRef(null);\r\n//   const { isConnected, messages, sendMessage, clearMessages, connectionStatus } = useWebSocket(\r\n//     `ws://localhost:8000/debate/${sessionId}`\r\n//   );\r\n\r\n//   // --- FIX: This ref tracks how many messages we've already processed ---\r\n//   const processedMessagesCount = useRef(0);\r\n\r\n//   // Auto-scroll to bottom on new messages\r\n//   const scrollToBottom = () => {\r\n//     messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     scrollToBottom();\r\n//   }, [debateState.agentMessages, debateState.finalReport]);\r\n\r\n//   // --- FIX: Rewritten message processing logic to handle batches ---\r\n//   useEffect(() => {\r\n//     // Get only the new messages that haven't been processed yet\r\n//     const newMessages = messages.slice(processedMessagesCount.current);\r\n//     if (newMessages.length === 0) return;\r\n\r\n//     // Process all new messages in a batch\r\n//     setDebateState(prev => {\r\n//       // Create a mutable copy of the previous state\r\n//       const newState = { ...prev };\r\n\r\n//       newMessages.forEach(message => {\r\n//         switch (message.type) {\r\n//           case 'research_complete':\r\n//             newState.status = 'research_complete';\r\n//             newState.researchBrief = message.data.brief;\r\n//             break;\r\n\r\n//           case 'agent_response':\r\n//             newState.status = 'debating';\r\n//             // Avoid adding duplicate messages\r\n//             if (!newState.agentMessages.some(m => m.id === message.id)) {\r\n//               newState.agentMessages.push(message);\r\n//             }\r\n//             newState.currentRound = Math.max(newState.currentRound, message.data.round || 1);\r\n//             break;\r\n\r\n//           case 'judge_decision':\r\n//             newState.status = 'judge_deciding';\r\n//             if (!newState.judgeDecisions.some(d => d.id === message.id)) {\r\n//                 newState.judgeDecisions.push(message);\r\n//             }\r\n//             break;\r\n\r\n//           case 'final_report':\r\n//             newState.status = 'complete';\r\n//             newState.finalReport = message.data;\r\n//             break;\r\n\r\n//           case 'debate_complete':\r\n//             newState.status = 'complete';\r\n//             break;\r\n\r\n//           case 'error':\r\n//             console.error('Debate error:', message.message);\r\n//             newState.status = 'error';\r\n//             break;\r\n\r\n//           default:\r\n//             console.log('Received unknown message type:', message.type);\r\n//             break;\r\n//         }\r\n//       });\r\n\r\n//       return newState;\r\n//     });\r\n\r\n//     // Update the counter to the new total number of messages\r\n//     processedMessagesCount.current = messages.length;\r\n\r\n//   }, [messages]); // This effect now correctly depends only on the 'messages' array\r\n\r\n//   const startDebate = () => {\r\n//     if (!query.trim() || !isConnected) return;\r\n    \r\n//     clearMessages();\r\n//     processedMessagesCount.current = 0; // Reset the counter\r\n//     setDebateState({\r\n//       status: 'starting',\r\n//       researchBrief: null,\r\n//       agentMessages: [],\r\n//       judgeDecisions: [],\r\n//       finalReport: null,\r\n//       currentRound: 0,\r\n//       startTime: new Date()\r\n//     });\r\n\r\n//     const success = sendMessage({\r\n//       type: 'start_debate',\r\n//       query: query\r\n//     });\r\n\r\n//     if (success) {\r\n//       setDebateState(prev => ({ ...prev, status: 'researching' }));\r\n//     }\r\n//   };\r\n\r\n//   const resetDebate = () => {\r\n//     setQuery('');\r\n//     clearMessages();\r\n//     processedMessagesCount.current = 0; // Reset the counter\r\n//     setDebateState({\r\n//       status: 'idle',\r\n//       researchBrief: null,\r\n//       agentMessages: [],\r\n//       judgeDecisions: [],\r\n//       finalReport: null,\r\n//       currentRound: 0,\r\n//       startTime: null\r\n//     });\r\n//   };\r\n\r\n//   const getStatusConfig = () => {\r\n//     const configs = {\r\n//       idle: { \r\n//         message: 'Ready to explore complex topics through expert debate', \r\n//         color: 'text-gray-600',\r\n//         bgColor: 'bg-gray-100',\r\n//         icon: '🤔'\r\n//       },\r\n//       starting: { \r\n//         message: 'Initializing expert debate session...', \r\n//         color: 'text-blue-600',\r\n//         bgColor: 'bg-blue-100',\r\n//         icon: '🚀'\r\n//       },\r\n//       researching: { \r\n//         message: 'AI researcher gathering comprehensive information...', \r\n//         color: 'text-blue-600',\r\n//         bgColor: 'bg-blue-100',\r\n//         icon: '🔍'\r\n//       },\r\n//       research_complete: { \r\n//         message: 'Research complete. Expert agents preparing arguments...', \r\n//         color: 'text-green-600',\r\n//         bgColor: 'bg-green-100',\r\n//         icon: '✅'\r\n//       },\r\n//       debating: { \r\n//         message: `Round ${debateState.currentRound} - Expert debate in progress...`, \r\n//         color: 'text-purple-600',\r\n//         bgColor: 'bg-purple-100',\r\n//         icon: '🎯'\r\n//       },\r\n//       debating_round_1_parallel: { \r\n//         message: 'Round 1 - All experts presenting opening statements simultaneously...', \r\n//         color: 'text-purple-600',\r\n//         bgColor: 'bg-purple-100',\r\n//         icon: '🎯'\r\n//       },\r\n//       judge_deciding: { \r\n//         message: 'AI judge evaluating debate progress...', \r\n//         color: 'text-yellow-600',\r\n//         bgColor: 'bg-yellow-100',\r\n//         icon: '⚖️'\r\n//       },\r\n//       moderating: { \r\n//         message: 'AI moderator synthesizing insights and conclusions...', \r\n//         color: 'text-indigo-600',\r\n//         bgColor: 'bg-indigo-100',\r\n//         icon: '📝'\r\n//       },\r\n//       complete: { \r\n//         message: 'Multi-agent debate analysis complete!', \r\n//         color: 'text-green-600',\r\n//         bgColor: 'bg-green-100',\r\n//         icon: '🎉'\r\n//       },\r\n//       error: { \r\n//         message: 'An error occurred during the debate process', \r\n//         color: 'text-red-600',\r\n//         bgColor: 'bg-red-100',\r\n//         icon: '❌'\r\n//       }\r\n//     };\r\n\r\n//     // Handle dynamic sequential round statuses\r\n//     if (debateState.status.startsWith('debating_round_') && debateState.status.includes('_sequential')) {\r\n//       return {\r\n//         message: `Round ${debateState.currentRound} - Expert rebuttals and counter-arguments...`,\r\n//         color: 'text-indigo-600',\r\n//         bgColor: 'bg-indigo-100',\r\n//         icon: '💬'\r\n//       };\r\n//     }\r\n\r\n//     return configs[debateState.status] || configs.idle;\r\n//   };\r\n\r\n//   const isDebateActive = ['starting', 'researching', 'research_complete', 'debating', 'judge_deciding', 'moderating'].includes(debateState.status);\r\n//   const statusConfig = getStatusConfig();\r\n\r\n//   const getConnectionStatusConfig = () => {\r\n//     const configs = {\r\n//       connected: { color: 'bg-green-500', text: 'Connected', textColor: 'text-green-800' },\r\n//       connecting: { color: 'bg-yellow-500', text: 'Connecting...', textColor: 'text-yellow-800' },\r\n//       reconnecting: { color: 'bg-yellow-500', text: 'Reconnecting...', textColor: 'text-yellow-800' },\r\n//       disconnected: { color: 'bg-red-500', text: 'Disconnected', textColor: 'text-red-800' },\r\n//       error: { color: 'bg-red-500', text: 'Connection Error', textColor: 'text-red-800' },\r\n//       failed: { color: 'bg-red-500', text: 'Connection Failed', textColor: 'text-red-800' }\r\n//     };\r\n//     return configs[connectionStatus] || configs.disconnected;\r\n//   };\r\n\r\n//   const connectionConfig = getConnectionStatusConfig();\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-100\">\r\n//       <div className=\"max-w-7xl mx-auto p-4 space-y-6\">\r\n        \r\n//         {/* Header */}\r\n//         <motion.div \r\n//           initial={{ opacity: 0, y: -20 }}\r\n//           animate={{ opacity: 1, y: 0 }}\r\n//           className=\"text-center py-8\"\r\n//         >\r\n//           <h1 className=\"text-5xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent mb-3\">\r\n//             Project Chimera\r\n//           </h1>\r\n//           <p className=\"text-xl text-gray-600 font-medium\">\r\n//             Multi-Agent Expert Debate System\r\n//           </p>\r\n//           <p className=\"text-sm text-gray-500 mt-2\">\r\n//             Harness the power of AI experts to explore complex topics from multiple perspectives\r\n//           </p>\r\n//         </motion.div>\r\n\r\n//         {/* Query Input Section */}\r\n//         <motion.div \r\n//           initial={{ opacity: 0, y: 20 }}\r\n//           animate={{ opacity: 1, y: 0 }}\r\n//           className=\"bg-white/80 backdrop-blur-sm rounded-2xl shadow-xl p-6 border border-white/50\"\r\n//         >\r\n//           <div className=\"flex flex-col space-y-4\">\r\n//             <div className=\"flex space-x-4\">\r\n//               <div className=\"flex-1 relative\">\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={query}\r\n//                   onChange={(e) => setQuery(e.target.value)}\r\n//                   placeholder=\"Enter your complex question or debate topic...\"\r\n//                   className=\"w-full p-4 pl-12 border-2 border-gray-200 rounded-xl focus:ring-4 focus:ring-blue-500/20 focus:border-blue-500 transition-all duration-200 text-lg\"\r\n//                   disabled={isDebateActive}\r\n//                   onKeyPress={(e) => e.key === 'Enter' && !isDebateActive && startDebate()}\r\n//                 />\r\n//                 <div className=\"absolute left-4 top-1/2 transform -translate-y-1/2 text-gray-400\">\r\n//                   🤖\r\n//                 </div>\r\n//               </div>\r\n              \r\n//               <button\r\n//                 onClick={startDebate}\r\n//                 disabled={!query.trim() || !isConnected || isDebateActive}\r\n//                 className=\"px-8 py-4 bg-gradient-to-r from-blue-600 to-indigo-600 text-white rounded-xl hover:from-blue-700 hover:to-indigo-700 disabled:from-gray-400 disabled:to-gray-500 disabled:cursor-not-allowed transition-all duration-200 flex items-center space-x-2 font-semibold text-lg shadow-lg hover:shadow-xl\"\r\n//               >\r\n//                 {isDebateActive ? (\r\n//                   <>\r\n//                     <PauseIcon className=\"h-5 w-5 animate-pulse\" />\r\n//                     <span>In Progress</span>\r\n//                   </>\r\n//                 ) : (\r\n//                   <>\r\n//                     <PlayIcon className=\"h-5 w-5\" />\r\n//                     <span>Start Debate</span>\r\n//                   </>\r\n//                 )}\r\n//               </button>\r\n              \r\n//               <button\r\n//                 onClick={resetDebate}\r\n//                 disabled={isDebateActive}\r\n//                 className=\"px-6 py-4 bg-gray-600 text-white rounded-xl hover:bg-gray-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-all duration-200 flex items-center space-x-2 font-semibold shadow-lg\"\r\n//               >\r\n//                 <ArrowPathIcon className=\"h-5 w-5\" />\r\n//                 <span>Reset</span>\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </motion.div>\r\n\r\n//         {/* Status Bar */}\r\n//         <motion.div \r\n//           initial={{ opacity: 0 }}\r\n//           animate={{ opacity: 1 }}\r\n//           className=\"flex items-center justify-between\"\r\n//         >\r\n//           <div className={`inline-flex items-center px-4 py-2 rounded-full text-sm font-bold ${statusConfig.bgColor} ${statusConfig.color}`}>\r\n//             <span className=\"mr-2\">{statusConfig.icon}</span>\r\n//             {statusConfig.message}\r\n//           </div>\r\n          \r\n//           <div className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-white/80 ${connectionConfig.textColor} border border-gray-200`}>\r\n//             <div className={`w-2 h-2 rounded-full mr-2 ${connectionConfig.color} ${\r\n//               connectionStatus === 'connecting' || connectionStatus === 'reconnecting' ? 'animate-pulse' : ''\r\n//             }`}></div>\r\n//             {connectionConfig.text}\r\n//           </div>\r\n//         </motion.div>\r\n\r\n//         {/* Research Phase */}\r\n//         <AnimatePresence>\r\n//           {(debateState.status === 'researching' || debateState.researchBrief) && (\r\n//             <ResearchPanel \r\n//               researchBrief={debateState.researchBrief} \r\n//               isLoading={debateState.status === 'researching'}\r\n//             />\r\n//           )}\r\n//         </AnimatePresence>\r\n\r\n//         {/* Judge Decisions */}\r\n//         <AnimatePresence>\r\n//           {debateState.judgeDecisions.length > 0 && (\r\n//             <JudgePanel judgeDecisions={debateState.judgeDecisions} />\r\n//           )}\r\n//         </AnimatePresence>\r\n\r\n//         {/* Expert Agents Grid */}\r\n//         <AnimatePresence>\r\n//           {(debateState.agentMessages.length > 0 || isDebateActive) && (\r\n//             <motion.div \r\n//               initial={{ opacity: 0, y: 20 }}\r\n//               animate={{ opacity: 1, y: 0 }}\r\n//               className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\"\r\n//             >\r\n//               {['innovator', 'skeptic', 'engineer', 'ethicist'].map((agent) => (\r\n//                 <AgentPanel\r\n//                   key={agent}\r\n//                   agent={agent}\r\n//                   messages={debateState.agentMessages}\r\n//                   currentRound={debateState.currentRound}\r\n//                   isActive={false} // Active state can be enhanced later\r\n//                   debateStatus={debateState.status}\r\n//                 />\r\n//               ))}\r\n//             </motion.div>\r\n//           )}\r\n//         </AnimatePresence>\r\n\r\n//         {/* Final Report */}\r\n//         <AnimatePresence>\r\n//           {debateState.finalReport && (\r\n//             <FinalReport report={debateState.finalReport} />\r\n//           )}\r\n//         </AnimatePresence>\r\n\r\n//         {/* Scroll marker */}\r\n//         <div ref={messagesEndRef} />\r\n\r\n//         {/* Development Debug Panel */}\r\n//         {process.env.NODE_ENV === 'development' && (\r\n//           <motion.div \r\n//             initial={{ opacity: 0 }}\r\n//             animate={{ opacity: 1 }}\r\n//             className=\"bg-gray-900 text-green-400 p-4 rounded-lg font-mono text-xs space-y-1\"\r\n//           >\r\n//             <div className=\"text-green-300 font-bold mb-2\">🔧 Debug Panel</div>\r\n//             <div>Session: {sessionId}</div>\r\n//             <div>Status: {debateState.status}</div>\r\n//             <div>WS Msgs: {messages.length}</div>\r\n//             <div>Processed Msgs: {processedMessagesCount.current}</div>\r\n//             <div>Round: {debateState.currentRound}</div>\r\n//             <div>Connection: {connectionStatus}</div>\r\n//             <div>Agent Msgs in State: {debateState.agentMessages.length}</div>\r\n//             {debateState.startTime && (\r\n//               <div>Duration: {Math.round((new Date() - debateState.startTime) / 1000)}s</div>\r\n//             )}\r\n//           </motion.div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DebateInterface;\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { \r\n  ArrowPathIcon, \r\n  PlayIcon,\r\n  PauseIcon,\r\n  SparklesIcon,\r\n  BoltIcon,\r\n  RocketLaunchIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nimport useWebSocket from '../hooks/useWebSocket';\r\nimport ResearchPanel from './ResearchPanel';\r\nimport AgentPanel from './AgentPanel';\r\nimport JudgePanel from './JudgePanel';\r\nimport FinalReport from './FinalReport';\r\n\r\nconst DebateInterface = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [sessionId] = useState(() => `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);\r\n  const [debateState, setDebateState] = useState({\r\n    status: 'idle',\r\n    researchBrief: null,\r\n    agentMessages: [],\r\n    judgeDecisions: [],\r\n    finalReport: null,\r\n    currentRound: 0,\r\n    startTime: null\r\n  });\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const { isConnected, messages, sendMessage, clearMessages, connectionStatus } = useWebSocket(\r\n    `ws://localhost:8000/debate/${sessionId}`\r\n  );\r\n\r\n  const processedMessagesCount = useRef(0);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [debateState.agentMessages, debateState.finalReport]);\r\n\r\n  // Correct, robust message processing logic\r\n  useEffect(() => {\r\n    const newMessages = messages.slice(processedMessagesCount.current);\r\n    if (newMessages.length === 0) return;\r\n\r\n    setDebateState(prev => {\r\n      const newState = { ...prev };\r\n      newMessages.forEach(message => {\r\n        switch (message.type) {\r\n          case 'research_complete':\r\n            newState.status = 'research_complete';\r\n            newState.researchBrief = message.data.brief;\r\n            break;\r\n          case 'agent_response':\r\n            newState.status = 'debating';\r\n            if (!newState.agentMessages.some(m => m.id === message.id)) {\r\n              newState.agentMessages.push(message);\r\n            }\r\n            newState.currentRound = Math.max(newState.currentRound, message.data.round || 1);\r\n            break;\r\n          case 'judge_decision':\r\n            newState.status = 'judge_deciding';\r\n            if (!newState.judgeDecisions.some(d => d.id === message.id)) {\r\n                newState.judgeDecisions.push(message);\r\n            }\r\n            break;\r\n          case 'final_report':\r\n            newState.status = 'complete';\r\n            newState.finalReport = message.data;\r\n            break;\r\n          case 'debate_complete':\r\n            newState.status = 'complete';\r\n            break;\r\n          case 'error':\r\n            console.error('Debate error:', message.message);\r\n            newState.status = 'error';\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      return newState;\r\n    });\r\n\r\n    processedMessagesCount.current = messages.length;\r\n  }, [messages]);\r\n\r\n  const startDebate = () => {\r\n    if (!query.trim() || !isConnected) return;\r\n    \r\n    clearMessages();\r\n    processedMessagesCount.current = 0;\r\n    setDebateState({\r\n      status: 'starting',\r\n      researchBrief: null,\r\n      agentMessages: [],\r\n      judgeDecisions: [],\r\n      finalReport: null,\r\n      currentRound: 0,\r\n      startTime: new Date()\r\n    });\r\n\r\n    const success = sendMessage({\r\n      type: 'start_debate',\r\n      query: query\r\n    });\r\n\r\n    if (success) {\r\n      setDebateState(prev => ({ ...prev, status: 'researching' }));\r\n    }\r\n  };\r\n\r\n  const resetDebate = () => {\r\n    setQuery('');\r\n    clearMessages();\r\n    processedMessagesCount.current = 0;\r\n    setDebateState({\r\n      status: 'idle',\r\n      researchBrief: null,\r\n      agentMessages: [],\r\n      judgeDecisions: [],\r\n      finalReport: null,\r\n      currentRound: 0,\r\n      startTime: null\r\n    });\r\n  };\r\n\r\n  const getStatusConfig = () => {\r\n    const configs = {\r\n      idle: { \r\n        message: 'Ready to unleash the power of AI debate', \r\n        color: 'text-slate-300',\r\n        bgColor: 'bg-slate-800/50',\r\n        borderColor: 'border-slate-600/50',\r\n        icon: '🧠',\r\n        glow: 'shadow-slate-500/10'\r\n      },\r\n      starting: { \r\n        message: 'Initializing neural debate matrix...', \r\n        color: 'text-cyan-300',\r\n        bgColor: 'bg-cyan-900/40',\r\n        borderColor: 'border-cyan-500/30',\r\n        icon: '⚡',\r\n        glow: 'shadow-cyan-500/30'\r\n      },\r\n      researching: { \r\n        message: 'AI researcher scanning global knowledge...', \r\n        color: 'text-blue-300',\r\n        bgColor: 'bg-blue-900/40',\r\n        borderColor: 'border-blue-500/30',\r\n        icon: '🔍',\r\n        glow: 'shadow-blue-500/30'\r\n      },\r\n      research_complete: { \r\n        message: 'Knowledge acquired. Experts awakening...', \r\n        color: 'text-emerald-300',\r\n        bgColor: 'bg-emerald-900/40',\r\n        borderColor: 'border-emerald-500/30',\r\n        icon: '✨',\r\n        glow: 'shadow-emerald-500/30'\r\n      },\r\n      debating: { \r\n        message: `Round ${debateState.currentRound} • Neural combat engaged`, \r\n        color: 'text-purple-300',\r\n        bgColor: 'bg-purple-900/40',\r\n        borderColor: 'border-purple-500/30',\r\n        icon: '🎯',\r\n        glow: 'shadow-purple-500/30'\r\n      },\r\n      judge_deciding: { \r\n        message: 'Supreme Judge evaluating neural patterns...', \r\n        color: 'text-amber-300',\r\n        bgColor: 'bg-amber-900/40',\r\n        borderColor: 'border-amber-500/30',\r\n        icon: '⚖️',\r\n        glow: 'shadow-amber-500/30'\r\n      },\r\n      moderating: { \r\n        message: 'Synthesizing collective intelligence...', \r\n        color: 'text-indigo-300',\r\n        bgColor: 'bg-indigo-900/40',\r\n        borderColor: 'border-indigo-500/30',\r\n        icon: '🧬',\r\n        glow: 'shadow-indigo-500/30'\r\n      },\r\n      complete: { \r\n        message: 'Debate matrix complete • Insights extracted', \r\n        color: 'text-emerald-300',\r\n        bgColor: 'bg-emerald-900/40',\r\n        borderColor: 'border-emerald-500/30',\r\n        icon: '🎉',\r\n        glow: 'shadow-emerald-500/30'\r\n      },\r\n      error: { \r\n        message: 'Neural network disruption detected', \r\n        color: 'text-red-300',\r\n        bgColor: 'bg-red-900/40',\r\n        borderColor: 'border-red-500/30',\r\n        icon: '⚠️',\r\n        glow: 'shadow-red-500/30'\r\n      }\r\n    };\r\n    return configs[debateState.status] || configs.idle;\r\n  };\r\n\r\n  const isDebateActive = ['starting', 'researching', 'research_complete', 'debating', 'judge_deciding', 'moderating'].includes(debateState.status);\r\n  const statusConfig = getStatusConfig();\r\n\r\n  const getConnectionStatusConfig = () => {\r\n    const configs = {\r\n      connected: { \r\n        color: 'bg-emerald-500', \r\n        text: 'Neural Link Active', \r\n        textColor: 'text-emerald-300',\r\n        bgColor: 'bg-emerald-900/40',\r\n        borderColor: 'border-emerald-500/30' \r\n      },\r\n      connecting: { \r\n        color: 'bg-amber-500', \r\n        text: 'Establishing Link...', \r\n        textColor: 'text-amber-300',\r\n        bgColor: 'bg-amber-900/40',\r\n        borderColor: 'border-amber-500/30' \r\n      },\r\n      reconnecting: { \r\n        color: 'bg-amber-500', \r\n        text: 'Reconnecting...', \r\n        textColor: 'text-amber-300',\r\n        bgColor: 'bg-amber-900/40',\r\n        borderColor: 'border-amber-500/30' \r\n      },\r\n      disconnected: { \r\n        color: 'bg-red-500', \r\n        text: 'Neural Link Offline', \r\n        textColor: 'text-red-300',\r\n        bgColor: 'bg-red-900/40',\r\n        borderColor: 'border-red-500/30' \r\n      },\r\n      error: { \r\n        color: 'bg-red-500', \r\n        text: 'Connection Error', \r\n        textColor: 'text-red-300',\r\n        bgColor: 'bg-red-900/40',\r\n        borderColor: 'border-red-500/30' \r\n      },\r\n      failed: { \r\n        color: 'bg-red-500', \r\n        text: 'Link Failed', \r\n        textColor: 'text-red-300',\r\n        bgColor: 'bg-red-900/40',\r\n        borderColor: 'border-red-500/30' \r\n      }\r\n    };\r\n    return configs[connectionStatus] || configs.disconnected;\r\n  };\r\n\r\n  const connectionConfig = getConnectionStatusConfig();\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-slate-900 text-slate-200 relative overflow-hidden\">\r\n      <div className=\"absolute inset-0 bg-grid-slate-700/10 [mask-image:linear-gradient(to_bottom,white_20%,transparent_75%)]\"></div>\r\n      <div className=\"absolute inset-0 pointer-events-none [mask-image:radial-gradient(50%_50%_at_50%_50%,black_40%,transparent_100%)]\">\r\n        <div className=\"absolute inset-0 bg-gradient-to-br from-purple-500/20 via-transparent to-cyan-500/20 opacity-50 animate-blob\"></div>\r\n      </div>\r\n\r\n      <div className=\"relative z-10 max-w-7xl mx-auto p-6 space-y-8\">\r\n        \r\n        <motion.div \r\n          initial={{ opacity: 0, y: -30 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\r\n          className=\"text-center py-12\"\r\n        >\r\n          <h1 className=\"text-7xl md:text-8xl font-black bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent mb-4 tracking-tight\">\r\n            Chimera\r\n          </h1>\r\n          <p className=\"text-2xl md:text-3xl text-slate-300 font-bold tracking-wide\">\r\n            Neural Multi-Agent Debate System\r\n          </p>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          initial={{ opacity: 0, y: 30 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3, duration: 0.8 }}\r\n          className=\"relative\"\r\n        >\r\n          <div className=\"bg-slate-800/50 backdrop-blur-xl rounded-3xl shadow-2xl border border-slate-700/50 p-8\">\r\n            <div className=\"flex flex-col lg:flex-row gap-4\">\r\n              <div className=\"flex-1 relative group\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={query}\r\n                  onChange={(e) => setQuery(e.target.value)}\r\n                  placeholder=\"Enter your complex question or debate topic...\"\r\n                  className=\"w-full p-6 pl-16 bg-slate-900/50 border-2 border-slate-600/50 rounded-2xl focus:ring-4 focus:ring-purple-500/30 focus:border-purple-500/50 transition-all duration-300 text-white placeholder-slate-400 text-lg font-medium group-hover:border-slate-500/70\"\r\n                  disabled={isDebateActive}\r\n                  onKeyPress={(e) => e.key === 'Enter' && !isDebateActive && startDebate()}\r\n                />\r\n                <div className=\"absolute left-6 top-1/2 transform -translate-y-1/2 text-slate-400 group-hover:text-cyan-400 transition-colors duration-300 text-2xl\">\r\n                  🧠\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex space-x-4\">\r\n                <motion.button\r\n                  whileHover={{ scale: 1.02, boxShadow: \"0 10px 30px -10px rgba(139, 92, 246, 0.4)\" }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                  onClick={startDebate}\r\n                  disabled={!query.trim() || !isConnected || isDebateActive}\r\n                  className=\"px-8 py-6 bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-2xl hover:from-purple-700 hover:to-pink-700 disabled:from-slate-600 disabled:to-slate-700 disabled:cursor-not-allowed transition-all duration-300 flex items-center space-x-3 font-bold text-lg shadow-xl border border-purple-500/50\"\r\n                >\r\n                  {isDebateActive ? (\r\n                    <>\r\n                      <PauseIcon className=\"h-6 w-6\" />\r\n                      <span>In Progress</span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <PlayIcon className=\"h-6 w-6\" />\r\n                      <span>Ignite Debate</span>\r\n                    </>\r\n                  )}\r\n                </motion.button>\r\n                \r\n                <motion.button\r\n                  whileHover={{ scale: 1.02 }}\r\n                  whileTap={{ scale: 0.98 }}\r\n                  onClick={resetDebate}\r\n                  disabled={isDebateActive}\r\n                  className=\"px-6 py-6 bg-slate-700 text-slate-300 rounded-2xl hover:bg-slate-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300 flex items-center space-x-3 font-semibold shadow-xl border border-slate-600/50\"\r\n                >\r\n                  <ArrowPathIcon className=\"h-6 w-6\" />\r\n                </motion.button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          transition={{ delay: 0.6, duration: 0.6 }}\r\n          className=\"flex flex-col sm:flex-row items-center justify-between gap-4\"\r\n        >\r\n          <div className={`inline-flex items-center px-6 py-3 rounded-2xl font-bold text-sm border-2 backdrop-blur-sm ${statusConfig.bgColor} ${statusConfig.color} ${statusConfig.borderColor} ${statusConfig.glow} shadow-xl`}>\r\n            <span className=\"mr-3 text-lg\">{statusConfig.icon}</span>\r\n            {statusConfig.message}\r\n          </div>\r\n          \r\n          <div className={`inline-flex items-center px-4 py-2 rounded-xl text-sm font-bold border-2 backdrop-blur-sm ${connectionConfig.bgColor} ${connectionConfig.textColor} ${connectionConfig.borderColor} shadow-lg`}>\r\n            <div className={`w-3 h-3 rounded-full mr-3 ${connectionConfig.color} ${connectionStatus === 'connecting' || connectionStatus === 'reconnecting' ? 'animate-pulse' : ''}`} />\r\n            {connectionConfig.text}\r\n          </div>\r\n        </motion.div>\r\n\r\n        <AnimatePresence>\r\n          {(debateState.status === 'researching' || debateState.researchBrief) && (\r\n            <ResearchPanel \r\n              researchBrief={debateState.researchBrief} \r\n              isLoading={debateState.status === 'researching'}\r\n            />\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        <AnimatePresence>\r\n          {debateState.judgeDecisions.length > 0 && (\r\n            <JudgePanel judgeDecisions={debateState.judgeDecisions} />\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        <AnimatePresence>\r\n          {(isDebateActive || debateState.agentMessages.length > 0) && (\r\n            <motion.div \r\n              initial={{ opacity: 0, y: 30 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.2, duration: 0.8, staggerChildren: 0.1 }}\r\n              className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-6\"\r\n            >\r\n              {['innovator', 'skeptic', 'engineer', 'ethicist'].map((agent) => (\r\n                <AgentPanel\r\n                  key={agent}\r\n                  agent={agent}\r\n                  messages={debateState.agentMessages}\r\n                  currentRound={debateState.currentRound}\r\n                  isActive={false}\r\n                  debateStatus={debateState.status}\r\n                />\r\n              ))}\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        <AnimatePresence>\r\n          {debateState.finalReport && (\r\n            <FinalReport report={debateState.finalReport} />\r\n          )}\r\n        </AnimatePresence>\r\n\r\n        <div ref={messagesEndRef} />\r\n\r\n        {process.env.NODE_ENV === 'development' && (\r\n          <motion.div \r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            className=\"bg-slate-900/80 backdrop-blur-xl text-cyan-400 p-6 rounded-2xl font-mono text-xs space-y-2 border border-slate-700/50 shadow-2xl\"\r\n          >\r\n            <div className=\"text-cyan-300 font-bold mb-3\">DEBUG CONSOLE</div>\r\n            <div>Session: <span className=\"text-purple-400\">{sessionId}</span></div>\r\n            <div>Status: <span className=\"text-green-400\">{debateState.status}</span></div>\r\n            <div>WS Msgs: <span className=\"text-yellow-400\">{messages.length}</span></div>\r\n            <div>Processed: <span className=\"text-yellow-400\">{processedMessagesCount.current}</span></div>\r\n            <div>Round: <span className=\"text-pink-400\">{debateState.currentRound}</span></div>\r\n            <div>Connection: <span className=\"text-blue-400\">{connectionStatus}</span></div>\r\n            <div>Agent Msgs: <span className=\"text-indigo-400\">{debateState.agentMessages.length}</span></div>\r\n            {debateState.startTime && (\r\n              <div>Duration: <span className=\"text-emerald-400\">{Math.round((new Date() - debateState.startTime) / 1000)}s</span></div>\r\n            )}\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DebateInterface;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,SACEC,aAAa,EACbC,QAAQ,EACRC,SAAS,EACTC,YAAY,EACZC,QAAQ,EACRC,gBAAgB,QACX,6BAA6B;AAEpC,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,SAAS,CAAC,GAAGxB,QAAQ,CAAC,MAAM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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}