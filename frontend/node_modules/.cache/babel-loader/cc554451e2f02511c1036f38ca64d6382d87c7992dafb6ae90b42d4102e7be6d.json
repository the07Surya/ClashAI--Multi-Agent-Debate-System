{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SuryaPratapRout\\\\OneDrive - GyanSys Inc\\\\Desktop\\\\Apex\\\\Chimera-Debate\\\\Chimera-Clue\\\\frontend\\\\src\\\\components\\\\AgentPanel.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { motion, AnimatePresence } from 'framer-motion';\n// import { \n//   LightBulbIcon, \n//   ShieldExclamationIcon, \n//   CogIcon, \n//   ScaleIcon,\n//   ChevronDownIcon,\n//   ChevronUpIcon\n// } from '@heroicons/react/24/outline';\n\n// const getAgentConfig = (agentType) => {\n//   const configs = {\n//     innovator: {\n//       icon: LightBulbIcon,\n//       title: 'The Innovator',\n//       description: 'Champions progress & breakthrough solutions',\n//       colors: {\n//         primary: 'text-emerald-700',\n//         bg: 'bg-gradient-to-br from-emerald-50 to-green-50',\n//         border: 'border-emerald-200',\n//         accent: 'bg-emerald-100',\n//         glow: 'shadow-emerald-200/50'\n//       }\n//     },\n//     skeptic: {\n//       icon: ShieldExclamationIcon,\n//       title: 'The Skeptic',\n//       description: 'Challenges assumptions & identifies risks',\n//       colors: {\n//         primary: 'text-red-700',\n//         bg: 'bg-gradient-to-br from-red-50 to-pink-50',\n//         border: 'border-red-200',\n//         accent: 'bg-red-100',\n//         glow: 'shadow-red-200/50'\n//       }\n//     },\n//     engineer: {\n//       icon: CogIcon,\n//       title: 'The Engineer',\n//       description: 'Focuses on feasibility & implementation',\n//       colors: {\n//         primary: 'text-blue-700',\n//         bg: 'bg-gradient-to-br from-blue-50 to-cyan-50',\n//         border: 'border-blue-200',\n//         accent: 'bg-blue-100',\n//         glow: 'shadow-blue-200/50'\n//       }\n//     },\n//     ethicist: {\n//       icon: ScaleIcon,\n//       title: 'The Ethicist',\n//       description: 'Examines moral implications & social impact',\n//       colors: {\n//         primary: 'text-purple-700',\n//         bg: 'bg-gradient-to-br from-purple-50 to-indigo-50',\n//         border: 'border-purple-200',\n//         accent: 'bg-purple-100',\n//         glow: 'shadow-purple-200/50'\n//       }\n//     }\n//   };\n//   return configs[agentType] || configs.innovator;\n// };\n\n// const AgentPanel = ({ agent, messages = [], currentRound = 1, isActive = false, debateStatus = 'idle' }) => {\n//   const [expandedRounds, setExpandedRounds] = useState(new Set());\n//   const config = getAgentConfig(agent);\n//   const Icon = config.icon;\n\n//   useEffect(() => {\n//     // Automatically expand the current round\n//     if (currentRound > 0) {\n//       setExpandedRounds(prev => new Set(prev).add(currentRound));\n//     }\n//   }, [currentRound]);\n\n//   const agentMessages = messages\n//     .filter(msg => msg.data && msg.data.role === agent)\n//     .sort((a, b) => (a.data.round || 0) - (b.data.round || 0));\n\n//   const messagesByRound = agentMessages.reduce((acc, msg) => {\n//     const round = msg.data.round || 1;\n//     if (!acc[round]) acc[round] = [];\n//     acc[round].push(msg);\n//     return acc;\n//   }, {});\n\n//   // --- FIX: The core logic change is here ---\n//   // Determine all rounds to display. This includes rounds the agent has spoken in,\n//   // AND all rounds up to the current debate round. This ensures that even if an\n//   // agent hasn't responded yet, a placeholder for the current round is shown.\n//   const roundsWithMessages = Object.keys(messagesByRound).map(Number);\n//   const allPossibleRounds = Array.from({ length: currentRound > 0 ? currentRound : 0 }, (_, i) => i + 1);\n//   const allRounds = [...new Set([\n//     ...roundsWithMessages,\n//     ...allPossibleRounds\n//   ])].sort((a, b) => b - a); // Sort in descending order (latest first)\n//   // --- End of FIX ---\n\n//   const hasMessages = agentMessages.length > 0;\n\n//   const toggleRoundExpansion = (round) => {\n//     const newExpanded = new Set(expandedRounds);\n//     if (newExpanded.has(round)) {\n//       newExpanded.delete(round);\n//     } else {\n//       newExpanded.add(round);\n//     }\n//     setExpandedRounds(newExpanded);\n//   };\n\n//   return (\n//     <motion.div \n//       initial={{ opacity: 0, scale: 0.95 }}\n//       animate={{ opacity: 1, scale: 1 }}\n//       className={`\n//         ${config.colors.bg} \n//         ${config.colors.border} \n//         border-2 rounded-xl p-5 h-full min-h-[500px] max-h-[700px]\n//         ${isActive ? `${config.colors.glow} shadow-xl scale-[1.02]` : 'shadow-lg'}\n//         transition-all duration-300 relative overflow-hidden flex flex-col\n//       `}\n//     >\n//       {/* Header */}\n//       <div className=\"flex items-center space-x-3 mb-4 flex-shrink-0\">\n//         <div className={`${config.colors.accent} p-2 rounded-lg`}>\n//           <Icon className={`h-6 w-6 ${config.colors.primary}`} />\n//         </div>\n//         <div className=\"flex-1 min-w-0\">\n//           <h3 className={`font-bold text-lg ${config.colors.primary} truncate`}>\n//             {config.title}\n//           </h3>\n//           <p className=\"text-xs text-gray-600 leading-tight\">\n//             {config.description}\n//           </p>\n//         </div>\n//       </div>\n\n//       {/* Messages by Round */}\n//       <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 space-y-3\">\n//         <AnimatePresence>\n//           {allRounds.length === 0 ? (\n//             <motion.div \n//               initial={{ opacity: 0 }}\n//               animate={{ opacity: 1 }}\n//               className=\"text-center py-8 flex flex-col items-center justify-center h-full\"\n//             >\n//               <div className=\"text-gray-400 mb-2\">\n//                 <Icon className=\"h-12 w-12 mx-auto opacity-30\" />\n//               </div>\n//               <p className=\"text-sm text-gray-500 italic\">\n//                 Awaiting debate start...\n//               </p>\n//             </motion.div>\n//           ) : (\n//             allRounds.map(round => (\n//               <RoundSection\n//                 key={round}\n//                 round={round}\n//                 messages={messagesByRound[round] || []}\n//                 isExpanded={expandedRounds.has(round)}\n//                 onToggleExpansion={toggleRoundExpansion}\n//                 config={config}\n//                 isCurrentRound={round === currentRound}\n//                 isWaitingForResponse={debateStatus === 'debating' && round === currentRound && !messagesByRound[round]}\n//               />\n//             ))\n//           )}\n//         </AnimatePresence>\n//       </div>\n\n//       {/* Footer Stats */}\n//       <div className=\"mt-4 pt-3 border-t border-white/50 flex-shrink-0\">\n//         <div className=\"flex justify-between items-center text-xs\">\n//           <span className=\"text-gray-600\">\n//             {agentMessages.length} response{agentMessages.length !== 1 ? 's' : ''}\n//           </span>\n//           <span className={`${config.colors.primary} font-medium`}>\n//             Current: Round {currentRound > 0 ? currentRound : '-'}\n//           </span>\n//         </div>\n//       </div>\n//     </motion.div>\n//   );\n// };\n\n// const RoundSection = ({ round, messages, isExpanded, onToggleExpansion, config, isCurrentRound, isWaitingForResponse }) => {\n//   const hasMessages = messages && messages.length > 0;\n\n//   return (\n//     <div className=\"border border-white/30 rounded-lg overflow-hidden\">\n//       {/* Round Header */}\n//       <button\n//         onClick={() => onToggleExpansion(round)}\n//         className={`w-full px-3 py-2 flex items-center justify-between transition-all duration-200 ${\n//           isCurrentRound \n//             ? `${config.colors.accent} ${config.colors.primary} font-semibold` \n//             : 'bg-white/50 text-gray-700 hover:bg-white/70'\n//         }`}\n//       >\n//         <div className=\"flex items-center space-x-2\">\n//           <span className=\"text-sm font-medium\">Round {round}</span>\n//           {isCurrentRound && (\n//             <span className=\"text-xs bg-white/80 px-2 py-0.5 rounded-full\">\n//               Current\n//             </span>\n//           )}\n//         </div>\n\n//         <div className=\"flex items-center space-x-2\">\n//           {hasMessages && (\n//             <span className=\"text-xs opacity-70\">\n//               {messages.length} response{messages.length !== 1 ? 's' : ''}\n//             </span>\n//           )}\n//           {isExpanded ? (\n//             <ChevronUpIcon className=\"h-4 w-4\" />\n//           ) : (\n//             <ChevronDownIcon className=\"h-4 w-4\" />\n//           )}\n//         </div>\n//       </button>\n\n//       {/* Round Content */}\n//       <AnimatePresence>\n//         {isExpanded && (\n//           <motion.div\n//             initial={{ height: 0, opacity: 0 }}\n//             animate={{ height: 'auto', opacity: 1 }}\n//             exit={{ height: 0, opacity: 0 }}\n//             transition={{ duration: 0.2 }}\n//             className=\"overflow-hidden\"\n//           >\n//             <div className=\"p-3 space-y-3 bg-white/20\">\n//               {isWaitingForResponse ? (\n//                 <div className=\"text-center py-4\">\n//                   <div className={`w-6 h-6 border-2 ${config.colors.border} border-t-transparent rounded-full animate-spin mx-auto mb-2`}></div>\n//                   <p className=\"text-xs text-gray-600 italic\">Analyzing...</p>\n//                 </div>\n//               ) : !hasMessages ? (\n//                 <div className=\"text-center py-4\">\n//                   <p className=\"text-xs text-gray-500 italic\">No response for this round</p>\n//                 </div>\n//               ) : (\n//                 messages.map((message, index) => (\n//                   <motion.div\n//                     key={message.id || `${round}-${index}`}\n//                     initial={{ opacity: 0, y: 10 }}\n//                     animate={{ opacity: 1, y: 0 }}\n//                     transition={{ delay: index * 0.05 }}\n//                     className=\"bg-white/60 backdrop-blur-sm rounded-lg p-3 border border-white/50\"\n//                   >\n//                     <div className=\"flex justify-between items-center mb-2\">\n//                       <span className=\"text-xs text-gray-500\">\n//                         {new Date(message.data.timestamp).toLocaleTimeString([], {\n//                           hour: '2-digit', \n//                           minute: '2-digit'\n//                         })}\n//                       </span>\n//                     </div>\n//                     <p className=\"text-sm text-gray-800 leading-relaxed\">\n//                       {message.data.content}\n//                     </p>\n//                   </motion.div>\n//                 ))\n//               )}\n//             </div>\n//           </motion.div>\n//         )}\n//       </AnimatePresence>\n//     </div>\n//   );\n// };\n\n// export default AgentPanel;\n\nimport React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { LightBulbIcon, ShieldExclamationIcon, CogIcon, ScaleIcon, ChevronDownIcon, UserIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getAgentConfig = agentType => {\n  const configs = {\n    innovator: {\n      icon: LightBulbIcon,\n      title: 'Alex Chen',\n      subtitle: 'The Innovator',\n      description: 'Visionary strategist pushing breakthrough solutions',\n      personality: '🚀 Optimistic • Forward-thinking • Disruptive',\n      colors: {\n        primary: 'text-emerald-400',\n        bg: 'bg-gradient-to-br from-emerald-900/40 via-green-900/40 to-teal-900/40',\n        border: 'border-emerald-500/30',\n        accent: 'bg-emerald-500/20',\n        glow: 'shadow-emerald-500/30',\n        particle: 'bg-emerald-400'\n      }\n    },\n    skeptic: {\n      icon: ShieldExclamationIcon,\n      title: 'Dr. Sarah Reeves',\n      subtitle: 'The Skeptic',\n      description: 'Risk analyst cutting through hype with precision',\n      personality: '🔍 Analytical • Evidence-based • Critical',\n      colors: {\n        primary: 'text-red-400',\n        bg: 'bg-gradient-to-br from-red-900/40 via-pink-900/40 to-rose-900/40',\n        border: 'border-red-500/30',\n        accent: 'bg-red-500/20',\n        glow: 'shadow-red-500/30',\n        particle: 'bg-red-400'\n      }\n    },\n    engineer: {\n      icon: CogIcon,\n      title: 'Marcus Torres',\n      subtitle: 'The Engineer',\n      description: 'Systems architect bridging vision with reality',\n      personality: '⚙️ Pragmatic • Technical • Solution-focused',\n      colors: {\n        primary: 'text-blue-400',\n        bg: 'bg-gradient-to-br from-blue-900/40 via-cyan-900/40 to-sky-900/40',\n        border: 'border-blue-500/30',\n        accent: 'bg-blue-500/20',\n        glow: 'shadow-blue-500/30',\n        particle: 'bg-blue-400'\n      }\n    },\n    ethicist: {\n      icon: ScaleIcon,\n      title: 'Dr. Amara Okafor',\n      subtitle: 'The Ethicist',\n      description: 'Moral philosopher examining human impact',\n      personality: '⚖️ Principled • Human-centered • Thoughtful',\n      colors: {\n        primary: 'text-purple-400',\n        bg: 'bg-gradient-to-br from-purple-900/40 via-indigo-900/40 to-violet-900/40',\n        border: 'border-purple-500/30',\n        accent: 'bg-purple-500/20',\n        glow: 'shadow-purple-500/30',\n        particle: 'bg-purple-400'\n      }\n    }\n  };\n  return configs[agentType] || configs.innovator;\n};\nconst AgentPanel = ({\n  agent,\n  messages = [],\n  currentRound = 1,\n  isActive = false,\n  debateStatus = 'idle'\n}) => {\n  _s();\n  const [expandedRounds, setExpandedRounds] = useState(new Set());\n  const config = getAgentConfig(agent);\n  const Icon = config.icon;\n  useEffect(() => {\n    if (currentRound > 0) {\n      setExpandedRounds(prev => new Set(prev).add(currentRound));\n    }\n  }, [currentRound]);\n  const agentMessages = messages.filter(msg => msg.data && msg.data.role === agent) // <-- CRITICAL FIX: was msg.data.agent\n  .sort((a, b) => (a.data.round || 0) - (b.data.round || 0));\n  const messagesByRound = agentMessages.reduce((acc, msg) => {\n    const round = msg.data.round || 1;\n    if (!acc[round]) acc[round] = [];\n    acc[round].push(msg);\n    return acc;\n  }, {});\n  const roundsWithMessages = Object.keys(messagesByRound).map(Number);\n  const allPossibleRounds = Array.from({\n    length: currentRound > 0 ? currentRound : 0\n  }, (_, i) => i + 1);\n  const allRounds = [...new Set([...roundsWithMessages, ...allPossibleRounds])].sort((a, b) => b - a);\n  const toggleRoundExpansion = round => {\n    const newExpanded = new Set(expandedRounds);\n    if (newExpanded.has(round)) {\n      newExpanded.delete(round);\n    } else {\n      newExpanded.add(round);\n    }\n    setExpandedRounds(newExpanded);\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: `\n        ${config.colors.bg} \n        backdrop-blur-xl border-2 ${config.colors.border} rounded-3xl p-6 h-full min-h-[600px] max-h-[800px]\n        ${isActive ? `${config.colors.glow} shadow-2xl` : 'shadow-xl'}\n        transition-all duration-500 relative overflow-hidden flex flex-col\n      `,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-start space-x-4 mb-6 flex-shrink-0 relative z-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${config.colors.accent} backdrop-blur-sm p-4 rounded-2xl border ${config.colors.border}`,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          className: `h-8 w-8 ${config.colors.primary}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 min-w-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `text-2xl font-black ${config.colors.primary} mb-1`,\n          children: config.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-300 font-bold text-sm mb-2\",\n          children: config.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-400 text-xs leading-tight mb-2\",\n          children: config.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-slate-500 font-medium\",\n          children: config.personality\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto space-y-4 custom-scrollbar\",\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: allRounds.length === 0 ? /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"text-center py-12\",\n          children: [/*#__PURE__*/_jsxDEV(UserIcon, {\n            className: \"h-16 w-16 mx-auto text-slate-600 mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-slate-400 font-medium\",\n            children: \"Awaiting debate...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this) : allRounds.map(round => /*#__PURE__*/_jsxDEV(RoundSection, {\n          round: round,\n          messages: messagesByRound[round] || [],\n          isExpanded: expandedRounds.has(round),\n          onToggleExpansion: toggleRoundExpansion,\n          config: config,\n          isCurrentRound: round === currentRound,\n          isWaitingForResponse: debateStatus === 'debating' && round === currentRound && !messagesByRound[round]\n        }, round, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"mt-6 pt-4 border-t border-slate-600/30 flex-shrink-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center text-xs\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-slate-400\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${config.colors.primary} font-bold`,\n            children: agentMessages.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 44\n          }, this), \" responses\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-slate-400 font-medium\",\n          children: [\"Round \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: config.colors.primary,\n            children: currentRound || '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 393,\n    columnNumber: 5\n  }, this);\n};\n_s(AgentPanel, \"52QYBYlXGlgCwMwo7MyHnSTu2X0=\");\n_c = AgentPanel;\nconst RoundSection = ({\n  round,\n  messages,\n  isExpanded,\n  onToggleExpansion,\n  config,\n  isCurrentRound,\n  isWaitingForResponse\n}) => {\n  const hasMessages = messages && messages.length > 0;\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"border border-slate-600/30 rounded-2xl overflow-hidden backdrop-blur-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onToggleExpansion(round),\n      className: `w-full px-6 py-4 flex items-center justify-between transition-all duration-300 ${isCurrentRound ? `${config.colors.accent} ${config.colors.primary} font-bold border-b ${config.colors.border}` : 'bg-slate-800/30 text-slate-300 hover:bg-slate-700/50'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${isCurrentRound ? config.colors.particle : 'bg-slate-500'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: [\"Round \", round]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [hasMessages && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs opacity-70 bg-slate-700/50 px-2 py-1 rounded-full\",\n          children: [messages.length, \" response\", messages.length !== 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          animate: {\n            rotate: isExpanded ? 180 : 0\n          },\n          transition: {\n            duration: 0.2\n          },\n          children: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isExpanded && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          height: 0,\n          opacity: 0\n        },\n        animate: {\n          height: 'auto',\n          opacity: 1\n        },\n        exit: {\n          height: 0,\n          opacity: 0\n        },\n        transition: {\n          duration: 0.3,\n          ease: \"easeInOut\"\n        },\n        className: \"overflow-hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6 bg-slate-800/20 space-y-4\",\n          children: isWaitingForResponse ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-8\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-slate-400\",\n              children: \"Analyzing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 17\n          }, this) : !hasMessages ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-8\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-slate-500 italic\",\n              children: \"No response for this round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 20\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            transition: {\n              delay: index * 0.1\n            },\n            className: \"bg-slate-900/50 rounded-xl p-4 border border-slate-600/20\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-slate-200 leading-relaxed font-medium\",\n              children: message.data.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 21\n            }, this)\n          }, message.id || `${round}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this);\n};\n_c2 = RoundSection;\nexport default AgentPanel;\nvar _c, _c2;\n$RefreshReg$(_c, \"AgentPanel\");\n$RefreshReg$(_c2, \"RoundSection\");","map":{"version":3,"names":["React","useState","useEffect","motion","AnimatePresence","LightBulbIcon","ShieldExclamationIcon","CogIcon","ScaleIcon","ChevronDownIcon","UserIcon","jsxDEV","_jsxDEV","getAgentConfig","agentType","configs","innovator","icon","title","subtitle","description","personality","colors","primary","bg","border","accent","glow","particle","skeptic","engineer","ethicist","AgentPanel","agent","messages","currentRound","isActive","debateStatus","_s","expandedRounds","setExpandedRounds","Set","config","Icon","prev","add","agentMessages","filter","msg","data","role","sort","a","b","round","messagesByRound","reduce","acc","push","roundsWithMessages","Object","keys","map","Number","allPossibleRounds","Array","from","length","_","i","allRounds","toggleRoundExpansion","newExpanded","has","delete","div","className","children","fileName","_jsxFileName","lineNumber","columnNumber","RoundSection","isExpanded","onToggleExpansion","isCurrentRound","isWaitingForResponse","_c","hasMessages","onClick","animate","rotate","transition","duration","initial","height","opacity","exit","ease","message","index","y","delay","content","id","_c2","$RefreshReg$"],"sources":["C:/Users/SuryaPratapRout/OneDrive - GyanSys Inc/Desktop/Apex/Chimera-Debate/Chimera-Clue/frontend/src/components/AgentPanel.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { motion, AnimatePresence } from 'framer-motion';\r\n// import { \r\n//   LightBulbIcon, \r\n//   ShieldExclamationIcon, \r\n//   CogIcon, \r\n//   ScaleIcon,\r\n//   ChevronDownIcon,\r\n//   ChevronUpIcon\r\n// } from '@heroicons/react/24/outline';\r\n\r\n// const getAgentConfig = (agentType) => {\r\n//   const configs = {\r\n//     innovator: {\r\n//       icon: LightBulbIcon,\r\n//       title: 'The Innovator',\r\n//       description: 'Champions progress & breakthrough solutions',\r\n//       colors: {\r\n//         primary: 'text-emerald-700',\r\n//         bg: 'bg-gradient-to-br from-emerald-50 to-green-50',\r\n//         border: 'border-emerald-200',\r\n//         accent: 'bg-emerald-100',\r\n//         glow: 'shadow-emerald-200/50'\r\n//       }\r\n//     },\r\n//     skeptic: {\r\n//       icon: ShieldExclamationIcon,\r\n//       title: 'The Skeptic',\r\n//       description: 'Challenges assumptions & identifies risks',\r\n//       colors: {\r\n//         primary: 'text-red-700',\r\n//         bg: 'bg-gradient-to-br from-red-50 to-pink-50',\r\n//         border: 'border-red-200',\r\n//         accent: 'bg-red-100',\r\n//         glow: 'shadow-red-200/50'\r\n//       }\r\n//     },\r\n//     engineer: {\r\n//       icon: CogIcon,\r\n//       title: 'The Engineer',\r\n//       description: 'Focuses on feasibility & implementation',\r\n//       colors: {\r\n//         primary: 'text-blue-700',\r\n//         bg: 'bg-gradient-to-br from-blue-50 to-cyan-50',\r\n//         border: 'border-blue-200',\r\n//         accent: 'bg-blue-100',\r\n//         glow: 'shadow-blue-200/50'\r\n//       }\r\n//     },\r\n//     ethicist: {\r\n//       icon: ScaleIcon,\r\n//       title: 'The Ethicist',\r\n//       description: 'Examines moral implications & social impact',\r\n//       colors: {\r\n//         primary: 'text-purple-700',\r\n//         bg: 'bg-gradient-to-br from-purple-50 to-indigo-50',\r\n//         border: 'border-purple-200',\r\n//         accent: 'bg-purple-100',\r\n//         glow: 'shadow-purple-200/50'\r\n//       }\r\n//     }\r\n//   };\r\n//   return configs[agentType] || configs.innovator;\r\n// };\r\n\r\n// const AgentPanel = ({ agent, messages = [], currentRound = 1, isActive = false, debateStatus = 'idle' }) => {\r\n//   const [expandedRounds, setExpandedRounds] = useState(new Set());\r\n//   const config = getAgentConfig(agent);\r\n//   const Icon = config.icon;\r\n\r\n//   useEffect(() => {\r\n//     // Automatically expand the current round\r\n//     if (currentRound > 0) {\r\n//       setExpandedRounds(prev => new Set(prev).add(currentRound));\r\n//     }\r\n//   }, [currentRound]);\r\n  \r\n//   const agentMessages = messages\r\n//     .filter(msg => msg.data && msg.data.role === agent)\r\n//     .sort((a, b) => (a.data.round || 0) - (b.data.round || 0));\r\n\r\n//   const messagesByRound = agentMessages.reduce((acc, msg) => {\r\n//     const round = msg.data.round || 1;\r\n//     if (!acc[round]) acc[round] = [];\r\n//     acc[round].push(msg);\r\n//     return acc;\r\n//   }, {});\r\n\r\n//   // --- FIX: The core logic change is here ---\r\n//   // Determine all rounds to display. This includes rounds the agent has spoken in,\r\n//   // AND all rounds up to the current debate round. This ensures that even if an\r\n//   // agent hasn't responded yet, a placeholder for the current round is shown.\r\n//   const roundsWithMessages = Object.keys(messagesByRound).map(Number);\r\n//   const allPossibleRounds = Array.from({ length: currentRound > 0 ? currentRound : 0 }, (_, i) => i + 1);\r\n//   const allRounds = [...new Set([\r\n//     ...roundsWithMessages,\r\n//     ...allPossibleRounds\r\n//   ])].sort((a, b) => b - a); // Sort in descending order (latest first)\r\n//   // --- End of FIX ---\r\n\r\n//   const hasMessages = agentMessages.length > 0;\r\n\r\n//   const toggleRoundExpansion = (round) => {\r\n//     const newExpanded = new Set(expandedRounds);\r\n//     if (newExpanded.has(round)) {\r\n//       newExpanded.delete(round);\r\n//     } else {\r\n//       newExpanded.add(round);\r\n//     }\r\n//     setExpandedRounds(newExpanded);\r\n//   };\r\n\r\n//   return (\r\n//     <motion.div \r\n//       initial={{ opacity: 0, scale: 0.95 }}\r\n//       animate={{ opacity: 1, scale: 1 }}\r\n//       className={`\r\n//         ${config.colors.bg} \r\n//         ${config.colors.border} \r\n//         border-2 rounded-xl p-5 h-full min-h-[500px] max-h-[700px]\r\n//         ${isActive ? `${config.colors.glow} shadow-xl scale-[1.02]` : 'shadow-lg'}\r\n//         transition-all duration-300 relative overflow-hidden flex flex-col\r\n//       `}\r\n//     >\r\n//       {/* Header */}\r\n//       <div className=\"flex items-center space-x-3 mb-4 flex-shrink-0\">\r\n//         <div className={`${config.colors.accent} p-2 rounded-lg`}>\r\n//           <Icon className={`h-6 w-6 ${config.colors.primary}`} />\r\n//         </div>\r\n//         <div className=\"flex-1 min-w-0\">\r\n//           <h3 className={`font-bold text-lg ${config.colors.primary} truncate`}>\r\n//             {config.title}\r\n//           </h3>\r\n//           <p className=\"text-xs text-gray-600 leading-tight\">\r\n//             {config.description}\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n      \r\n//       {/* Messages by Round */}\r\n//       <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-300 space-y-3\">\r\n//         <AnimatePresence>\r\n//           {allRounds.length === 0 ? (\r\n//             <motion.div \r\n//               initial={{ opacity: 0 }}\r\n//               animate={{ opacity: 1 }}\r\n//               className=\"text-center py-8 flex flex-col items-center justify-center h-full\"\r\n//             >\r\n//               <div className=\"text-gray-400 mb-2\">\r\n//                 <Icon className=\"h-12 w-12 mx-auto opacity-30\" />\r\n//               </div>\r\n//               <p className=\"text-sm text-gray-500 italic\">\r\n//                 Awaiting debate start...\r\n//               </p>\r\n//             </motion.div>\r\n//           ) : (\r\n//             allRounds.map(round => (\r\n//               <RoundSection\r\n//                 key={round}\r\n//                 round={round}\r\n//                 messages={messagesByRound[round] || []}\r\n//                 isExpanded={expandedRounds.has(round)}\r\n//                 onToggleExpansion={toggleRoundExpansion}\r\n//                 config={config}\r\n//                 isCurrentRound={round === currentRound}\r\n//                 isWaitingForResponse={debateStatus === 'debating' && round === currentRound && !messagesByRound[round]}\r\n//               />\r\n//             ))\r\n//           )}\r\n//         </AnimatePresence>\r\n//       </div>\r\n\r\n//       {/* Footer Stats */}\r\n//       <div className=\"mt-4 pt-3 border-t border-white/50 flex-shrink-0\">\r\n//         <div className=\"flex justify-between items-center text-xs\">\r\n//           <span className=\"text-gray-600\">\r\n//             {agentMessages.length} response{agentMessages.length !== 1 ? 's' : ''}\r\n//           </span>\r\n//           <span className={`${config.colors.primary} font-medium`}>\r\n//             Current: Round {currentRound > 0 ? currentRound : '-'}\r\n//           </span>\r\n//         </div>\r\n//       </div>\r\n//     </motion.div>\r\n//   );\r\n// };\r\n\r\n// const RoundSection = ({ round, messages, isExpanded, onToggleExpansion, config, isCurrentRound, isWaitingForResponse }) => {\r\n//   const hasMessages = messages && messages.length > 0;\r\n  \r\n//   return (\r\n//     <div className=\"border border-white/30 rounded-lg overflow-hidden\">\r\n//       {/* Round Header */}\r\n//       <button\r\n//         onClick={() => onToggleExpansion(round)}\r\n//         className={`w-full px-3 py-2 flex items-center justify-between transition-all duration-200 ${\r\n//           isCurrentRound \r\n//             ? `${config.colors.accent} ${config.colors.primary} font-semibold` \r\n//             : 'bg-white/50 text-gray-700 hover:bg-white/70'\r\n//         }`}\r\n//       >\r\n//         <div className=\"flex items-center space-x-2\">\r\n//           <span className=\"text-sm font-medium\">Round {round}</span>\r\n//           {isCurrentRound && (\r\n//             <span className=\"text-xs bg-white/80 px-2 py-0.5 rounded-full\">\r\n//               Current\r\n//             </span>\r\n//           )}\r\n//         </div>\r\n        \r\n//         <div className=\"flex items-center space-x-2\">\r\n//           {hasMessages && (\r\n//             <span className=\"text-xs opacity-70\">\r\n//               {messages.length} response{messages.length !== 1 ? 's' : ''}\r\n//             </span>\r\n//           )}\r\n//           {isExpanded ? (\r\n//             <ChevronUpIcon className=\"h-4 w-4\" />\r\n//           ) : (\r\n//             <ChevronDownIcon className=\"h-4 w-4\" />\r\n//           )}\r\n//         </div>\r\n//       </button>\r\n\r\n//       {/* Round Content */}\r\n//       <AnimatePresence>\r\n//         {isExpanded && (\r\n//           <motion.div\r\n//             initial={{ height: 0, opacity: 0 }}\r\n//             animate={{ height: 'auto', opacity: 1 }}\r\n//             exit={{ height: 0, opacity: 0 }}\r\n//             transition={{ duration: 0.2 }}\r\n//             className=\"overflow-hidden\"\r\n//           >\r\n//             <div className=\"p-3 space-y-3 bg-white/20\">\r\n//               {isWaitingForResponse ? (\r\n//                 <div className=\"text-center py-4\">\r\n//                   <div className={`w-6 h-6 border-2 ${config.colors.border} border-t-transparent rounded-full animate-spin mx-auto mb-2`}></div>\r\n//                   <p className=\"text-xs text-gray-600 italic\">Analyzing...</p>\r\n//                 </div>\r\n//               ) : !hasMessages ? (\r\n//                 <div className=\"text-center py-4\">\r\n//                   <p className=\"text-xs text-gray-500 italic\">No response for this round</p>\r\n//                 </div>\r\n//               ) : (\r\n//                 messages.map((message, index) => (\r\n//                   <motion.div\r\n//                     key={message.id || `${round}-${index}`}\r\n//                     initial={{ opacity: 0, y: 10 }}\r\n//                     animate={{ opacity: 1, y: 0 }}\r\n//                     transition={{ delay: index * 0.05 }}\r\n//                     className=\"bg-white/60 backdrop-blur-sm rounded-lg p-3 border border-white/50\"\r\n//                   >\r\n//                     <div className=\"flex justify-between items-center mb-2\">\r\n//                       <span className=\"text-xs text-gray-500\">\r\n//                         {new Date(message.data.timestamp).toLocaleTimeString([], {\r\n//                           hour: '2-digit', \r\n//                           minute: '2-digit'\r\n//                         })}\r\n//                       </span>\r\n//                     </div>\r\n//                     <p className=\"text-sm text-gray-800 leading-relaxed\">\r\n//                       {message.data.content}\r\n//                     </p>\r\n//                   </motion.div>\r\n//                 ))\r\n//               )}\r\n//             </div>\r\n//           </motion.div>\r\n//         )}\r\n//       </AnimatePresence>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AgentPanel;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { \r\n  LightBulbIcon, \r\n  ShieldExclamationIcon, \r\n  CogIcon, \r\n  ScaleIcon,\r\n  ChevronDownIcon,\r\n  UserIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nconst getAgentConfig = (agentType) => {\r\n  const configs = {\r\n    innovator: {\r\n      icon: LightBulbIcon,\r\n      title: 'Alex Chen',\r\n      subtitle: 'The Innovator',\r\n      description: 'Visionary strategist pushing breakthrough solutions',\r\n      personality: '🚀 Optimistic • Forward-thinking • Disruptive',\r\n      colors: {\r\n        primary: 'text-emerald-400',\r\n        bg: 'bg-gradient-to-br from-emerald-900/40 via-green-900/40 to-teal-900/40',\r\n        border: 'border-emerald-500/30',\r\n        accent: 'bg-emerald-500/20',\r\n        glow: 'shadow-emerald-500/30',\r\n        particle: 'bg-emerald-400'\r\n      }\r\n    },\r\n    skeptic: {\r\n      icon: ShieldExclamationIcon,\r\n      title: 'Dr. Sarah Reeves',\r\n      subtitle: 'The Skeptic',\r\n      description: 'Risk analyst cutting through hype with precision',\r\n      personality: '🔍 Analytical • Evidence-based • Critical',\r\n      colors: {\r\n        primary: 'text-red-400',\r\n        bg: 'bg-gradient-to-br from-red-900/40 via-pink-900/40 to-rose-900/40',\r\n        border: 'border-red-500/30',\r\n        accent: 'bg-red-500/20',\r\n        glow: 'shadow-red-500/30',\r\n        particle: 'bg-red-400'\r\n      }\r\n    },\r\n    engineer: {\r\n      icon: CogIcon,\r\n      title: 'Marcus Torres',\r\n      subtitle: 'The Engineer',\r\n      description: 'Systems architect bridging vision with reality',\r\n      personality: '⚙️ Pragmatic • Technical • Solution-focused',\r\n      colors: {\r\n        primary: 'text-blue-400',\r\n        bg: 'bg-gradient-to-br from-blue-900/40 via-cyan-900/40 to-sky-900/40',\r\n        border: 'border-blue-500/30',\r\n        accent: 'bg-blue-500/20',\r\n        glow: 'shadow-blue-500/30',\r\n        particle: 'bg-blue-400'\r\n      }\r\n    },\r\n    ethicist: {\r\n      icon: ScaleIcon,\r\n      title: 'Dr. Amara Okafor',\r\n      subtitle: 'The Ethicist',\r\n      description: 'Moral philosopher examining human impact',\r\n      personality: '⚖️ Principled • Human-centered • Thoughtful',\r\n      colors: {\r\n        primary: 'text-purple-400',\r\n        bg: 'bg-gradient-to-br from-purple-900/40 via-indigo-900/40 to-violet-900/40',\r\n        border: 'border-purple-500/30',\r\n        accent: 'bg-purple-500/20',\r\n        glow: 'shadow-purple-500/30',\r\n        particle: 'bg-purple-400'\r\n      }\r\n    }\r\n  };\r\n  return configs[agentType] || configs.innovator;\r\n};\r\n\r\nconst AgentPanel = ({ agent, messages = [], currentRound = 1, isActive = false, debateStatus = 'idle' }) => {\r\n  const [expandedRounds, setExpandedRounds] = useState(new Set());\r\n  const config = getAgentConfig(agent);\r\n  const Icon = config.icon;\r\n\r\n  useEffect(() => {\r\n    if (currentRound > 0) {\r\n      setExpandedRounds(prev => new Set(prev).add(currentRound));\r\n    }\r\n  }, [currentRound]);\r\n  \r\n  const agentMessages = messages\r\n    .filter(msg => msg.data && msg.data.role === agent) // <-- CRITICAL FIX: was msg.data.agent\r\n    .sort((a, b) => (a.data.round || 0) - (b.data.round || 0));\r\n\r\n  const messagesByRound = agentMessages.reduce((acc, msg) => {\r\n    const round = msg.data.round || 1;\r\n    if (!acc[round]) acc[round] = [];\r\n    acc[round].push(msg);\r\n    return acc;\r\n  }, {});\r\n\r\n  const roundsWithMessages = Object.keys(messagesByRound).map(Number);\r\n  const allPossibleRounds = Array.from({ length: currentRound > 0 ? currentRound : 0 }, (_, i) => i + 1);\r\n  const allRounds = [...new Set([...roundsWithMessages, ...allPossibleRounds])].sort((a, b) => b - a);\r\n\r\n  const toggleRoundExpansion = (round) => {\r\n    const newExpanded = new Set(expandedRounds);\r\n    if (newExpanded.has(round)) {\r\n      newExpanded.delete(round);\r\n    } else {\r\n      newExpanded.add(round);\r\n    }\r\n    setExpandedRounds(newExpanded);\r\n  };\r\n\r\n  return (\r\n    <motion.div \r\n      className={`\r\n        ${config.colors.bg} \r\n        backdrop-blur-xl border-2 ${config.colors.border} rounded-3xl p-6 h-full min-h-[600px] max-h-[800px]\r\n        ${isActive ? `${config.colors.glow} shadow-2xl` : 'shadow-xl'}\r\n        transition-all duration-500 relative overflow-hidden flex flex-col\r\n      `}\r\n    >\r\n      <div className=\"flex items-start space-x-4 mb-6 flex-shrink-0 relative z-10\">\r\n        <div className={`${config.colors.accent} backdrop-blur-sm p-4 rounded-2xl border ${config.colors.border}`}>\r\n          <Icon className={`h-8 w-8 ${config.colors.primary}`} />\r\n        </div>\r\n        <div className=\"flex-1 min-w-0\">\r\n          <h3 className={`text-2xl font-black ${config.colors.primary} mb-1`}>{config.title}</h3>\r\n          <p className=\"text-slate-300 font-bold text-sm mb-2\">{config.subtitle}</p>\r\n          <p className=\"text-slate-400 text-xs leading-tight mb-2\">{config.description}</p>\r\n          <p className=\"text-xs text-slate-500 font-medium\">{config.personality}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex-1 overflow-y-auto space-y-4 custom-scrollbar\">\r\n        <AnimatePresence>\r\n          {allRounds.length === 0 ? (\r\n            <motion.div className=\"text-center py-12\">\r\n              <UserIcon className=\"h-16 w-16 mx-auto text-slate-600 mb-4\" />\r\n              <p className=\"text-slate-400 font-medium\">Awaiting debate...</p>\r\n            </motion.div>\r\n          ) : (\r\n            allRounds.map(round => (\r\n              <RoundSection\r\n                key={round}\r\n                round={round}\r\n                messages={messagesByRound[round] || []}\r\n                isExpanded={expandedRounds.has(round)}\r\n                onToggleExpansion={toggleRoundExpansion}\r\n                config={config}\r\n                isCurrentRound={round === currentRound}\r\n                isWaitingForResponse={debateStatus === 'debating' && round === currentRound && !messagesByRound[round]}\r\n              />\r\n            ))\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n\r\n      <motion.div className=\"mt-6 pt-4 border-t border-slate-600/30 flex-shrink-0\">\r\n        <div className=\"flex justify-between items-center text-xs\">\r\n          <span className=\"text-slate-400\"><span className={`${config.colors.primary} font-bold`}>{agentMessages.length}</span> responses</span>\r\n          <span className=\"text-slate-400 font-medium\">Round <span className={config.colors.primary}>{currentRound || '-'}</span></span>\r\n        </div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst RoundSection = ({ round, messages, isExpanded, onToggleExpansion, config, isCurrentRound, isWaitingForResponse }) => {\r\n  const hasMessages = messages && messages.length > 0;\r\n  \r\n  return (\r\n    <motion.div className=\"border border-slate-600/30 rounded-2xl overflow-hidden backdrop-blur-sm\">\r\n      <button\r\n        onClick={() => onToggleExpansion(round)}\r\n        className={`w-full px-6 py-4 flex items-center justify-between transition-all duration-300 ${\r\n          isCurrentRound \r\n            ? `${config.colors.accent} ${config.colors.primary} font-bold border-b ${config.colors.border}` \r\n            : 'bg-slate-800/30 text-slate-300 hover:bg-slate-700/50'\r\n        }`}\r\n      >\r\n        <div className=\"flex items-center space-x-4\">\r\n          <div className={`w-3 h-3 rounded-full ${isCurrentRound ? config.colors.particle : 'bg-slate-500'}`} />\r\n          <span className=\"font-bold\">Round {round}</span>\r\n        </div>\r\n        <div className=\"flex items-center space-x-3\">\r\n          {hasMessages && (\r\n            <span className=\"text-xs opacity-70 bg-slate-700/50 px-2 py-1 rounded-full\">{messages.length} response{messages.length !== 1 ? 's' : ''}</span>\r\n          )}\r\n          <motion.div animate={{ rotate: isExpanded ? 180 : 0 }} transition={{ duration: 0.2 }}>\r\n            <ChevronDownIcon className=\"h-5 w-5\" />\r\n          </motion.div>\r\n        </div>\r\n      </button>\r\n\r\n      <AnimatePresence>\r\n        {isExpanded && (\r\n          <motion.div\r\n            initial={{ height: 0, opacity: 0 }}\r\n            animate={{ height: 'auto', opacity: 1 }}\r\n            exit={{ height: 0, opacity: 0 }}\r\n            transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n            className=\"overflow-hidden\"\r\n          >\r\n            <div className=\"p-6 bg-slate-800/20 space-y-4\">\r\n              {isWaitingForResponse ? (\r\n                <div className=\"text-center py-8\"><p className=\"text-sm text-slate-400\">Analyzing...</p></div>\r\n              ) : !hasMessages ? (\r\n                <div className=\"text-center py-8\"><p className=\"text-sm text-slate-500 italic\">No response for this round</p></div>\r\n              ) : (\r\n                messages.map((message, index) => (\r\n                  <motion.div\r\n                    key={message.id || `${round}-${index}`}\r\n                    initial={{ opacity: 0, y: 20 }}\r\n                    animate={{ opacity: 1, y: 0 }}\r\n                    transition={{ delay: index * 0.1 }}\r\n                    className=\"bg-slate-900/50 rounded-xl p-4 border border-slate-600/20\"\r\n                  >\r\n                    <p className=\"text-slate-200 leading-relaxed font-medium\">{message.data.content}</p>\r\n                  </motion.div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default AgentPanel;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}